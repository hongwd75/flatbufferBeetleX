// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace NetworkMessage
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct CS_LoginReq : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static CS_LoginReq GetRootAsCS_LoginReq(ByteBuffer _bb) { return GetRootAsCS_LoginReq(_bb, new CS_LoginReq()); }
  public static CS_LoginReq GetRootAsCS_LoginReq(ByteBuffer _bb, CS_LoginReq obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public CS_LoginReq __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string Id { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIdBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetIdBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetIdArray() { return __p.__vector_as_array<byte>(4); }
  public string Pwd { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetPwdBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetPwdBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetPwdArray() { return __p.__vector_as_array<byte>(6); }

  public static Offset<NetworkMessage.CS_LoginReq> CreateCS_LoginReq(FlatBufferBuilder builder,
      StringOffset idOffset = default(StringOffset),
      StringOffset pwdOffset = default(StringOffset)) {
    builder.StartTable(2);
    CS_LoginReq.AddPwd(builder, pwdOffset);
    CS_LoginReq.AddId(builder, idOffset);
    return CS_LoginReq.EndCS_LoginReq(builder);
  }

  public static void StartCS_LoginReq(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddId(FlatBufferBuilder builder, StringOffset idOffset) { builder.AddOffset(0, idOffset.Value, 0); }
  public static void AddPwd(FlatBufferBuilder builder, StringOffset pwdOffset) { builder.AddOffset(1, pwdOffset.Value, 0); }
  public static Offset<NetworkMessage.CS_LoginReq> EndCS_LoginReq(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<NetworkMessage.CS_LoginReq>(o);
  }
  public CS_LoginReq_FBS UnPack() {
    var _o = new CS_LoginReq_FBS();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(CS_LoginReq_FBS _o) {
    _o.Id = this.Id;
    _o.Pwd = this.Pwd;
  }
  public static Offset<NetworkMessage.CS_LoginReq> Pack(FlatBufferBuilder builder, CS_LoginReq_FBS _o) {
    if (_o == null) return default(Offset<NetworkMessage.CS_LoginReq>);
    var _id = _o.Id == null ? default(StringOffset) : builder.CreateString(_o.Id);
    var _pwd = _o.Pwd == null ? default(StringOffset) : builder.CreateString(_o.Pwd);
    return CreateCS_LoginReq(
      builder,
      _id,
      _pwd);
  }
}

public class CS_LoginReq_FBS
{
  public string Id { get; set; }
  public string Pwd { get; set; }

  public CS_LoginReq_FBS() {
    this.Id = null;
    this.Pwd = null;
  }
}


static public class CS_LoginReqVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyString(tablePos, 4 /*Id*/, false)
      && verifier.VerifyString(tablePos, 6 /*Pwd*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}
public struct CS_WorldJoinReq : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static CS_WorldJoinReq GetRootAsCS_WorldJoinReq(ByteBuffer _bb) { return GetRootAsCS_WorldJoinReq(_bb, new CS_WorldJoinReq()); }
  public static CS_WorldJoinReq GetRootAsCS_WorldJoinReq(ByteBuffer _bb, CS_WorldJoinReq obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public CS_WorldJoinReq __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Gate { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<NetworkMessage.CS_WorldJoinReq> CreateCS_WorldJoinReq(FlatBufferBuilder builder,
      int gate = 0) {
    builder.StartTable(1);
    CS_WorldJoinReq.AddGate(builder, gate);
    return CS_WorldJoinReq.EndCS_WorldJoinReq(builder);
  }

  public static void StartCS_WorldJoinReq(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddGate(FlatBufferBuilder builder, int gate) { builder.AddInt(0, gate, 0); }
  public static Offset<NetworkMessage.CS_WorldJoinReq> EndCS_WorldJoinReq(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<NetworkMessage.CS_WorldJoinReq>(o);
  }
  public CS_WorldJoinReq_FBS UnPack() {
    var _o = new CS_WorldJoinReq_FBS();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(CS_WorldJoinReq_FBS _o) {
    _o.Gate = this.Gate;
  }
  public static Offset<NetworkMessage.CS_WorldJoinReq> Pack(FlatBufferBuilder builder, CS_WorldJoinReq_FBS _o) {
    if (_o == null) return default(Offset<NetworkMessage.CS_WorldJoinReq>);
    return CreateCS_WorldJoinReq(
      builder,
      _o.Gate);
  }
}

public class CS_WorldJoinReq_FBS
{
  public int Gate { get; set; }

  public CS_WorldJoinReq_FBS() {
    this.Gate = 0;
  }
}


static public class CS_WorldJoinReqVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Gate*/, 4 /*int*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}
public struct CS_UpdatePosition : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static CS_UpdatePosition GetRootAsCS_UpdatePosition(ByteBuffer _bb) { return GetRootAsCS_UpdatePosition(_bb, new CS_UpdatePosition()); }
  public static CS_UpdatePosition GetRootAsCS_UpdatePosition(ByteBuffer _bb, CS_UpdatePosition obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public CS_UpdatePosition __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Sessionid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Head { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public NetworkMessage.Vector3? Position { get { int o = __p.__offset(8); return o != 0 ? (NetworkMessage.Vector3?)(new NetworkMessage.Vector3()).__assign(o + __p.bb_pos, __p.bb) : null; } }

  public static Offset<NetworkMessage.CS_UpdatePosition> CreateCS_UpdatePosition(FlatBufferBuilder builder,
      int sessionid = 0,
      int head = 0,
      NetworkMessage.Vector3_FBS position = null) {
    builder.StartTable(3);
    CS_UpdatePosition.AddPosition(builder, NetworkMessage.Vector3.Pack(builder, position));
    CS_UpdatePosition.AddHead(builder, head);
    CS_UpdatePosition.AddSessionid(builder, sessionid);
    return CS_UpdatePosition.EndCS_UpdatePosition(builder);
  }

  public static void StartCS_UpdatePosition(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddSessionid(FlatBufferBuilder builder, int sessionid) { builder.AddInt(0, sessionid, 0); }
  public static void AddHead(FlatBufferBuilder builder, int head) { builder.AddInt(1, head, 0); }
  public static void AddPosition(FlatBufferBuilder builder, Offset<NetworkMessage.Vector3> positionOffset) { builder.AddStruct(2, positionOffset.Value, 0); }
  public static Offset<NetworkMessage.CS_UpdatePosition> EndCS_UpdatePosition(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<NetworkMessage.CS_UpdatePosition>(o);
  }
  public CS_UpdatePosition_FBS UnPack() {
    var _o = new CS_UpdatePosition_FBS();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(CS_UpdatePosition_FBS _o) {
    _o.Sessionid = this.Sessionid;
    _o.Head = this.Head;
    _o.Position = this.Position.HasValue ? this.Position.Value.UnPack() : null;
  }
  public static Offset<NetworkMessage.CS_UpdatePosition> Pack(FlatBufferBuilder builder, CS_UpdatePosition_FBS _o) {
    if (_o == null) return default(Offset<NetworkMessage.CS_UpdatePosition>);
    return CreateCS_UpdatePosition(
      builder,
      _o.Sessionid,
      _o.Head,
      _o.Position);
  }
}

public class CS_UpdatePosition_FBS
{
  public int Sessionid { get; set; }
  public int Head { get; set; }
  public NetworkMessage.Vector3_FBS Position { get; set; }

  public CS_UpdatePosition_FBS() {
    this.Sessionid = 0;
    this.Head = 0;
    this.Position = new NetworkMessage.Vector3_FBS();
  }
}


static public class CS_UpdatePositionVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Sessionid*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*Head*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 8 /*Position*/, 12 /*NetworkMessage.Vector3*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}
/////////////////////////////////////////////////////////
public struct SC_LoginAns : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static SC_LoginAns GetRootAsSC_LoginAns(ByteBuffer _bb) { return GetRootAsSC_LoginAns(_bb, new SC_LoginAns()); }
  public static SC_LoginAns GetRootAsSC_LoginAns(ByteBuffer _bb, SC_LoginAns obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SC_LoginAns __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Errorcode { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Sessionid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string Nickname { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNicknameBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetNicknameBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetNicknameArray() { return __p.__vector_as_array<byte>(8); }

  public static Offset<NetworkMessage.SC_LoginAns> CreateSC_LoginAns(FlatBufferBuilder builder,
      int errorcode = 0,
      int sessionid = 0,
      StringOffset nicknameOffset = default(StringOffset)) {
    builder.StartTable(3);
    SC_LoginAns.AddNickname(builder, nicknameOffset);
    SC_LoginAns.AddSessionid(builder, sessionid);
    SC_LoginAns.AddErrorcode(builder, errorcode);
    return SC_LoginAns.EndSC_LoginAns(builder);
  }

  public static void StartSC_LoginAns(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddErrorcode(FlatBufferBuilder builder, int errorcode) { builder.AddInt(0, errorcode, 0); }
  public static void AddSessionid(FlatBufferBuilder builder, int sessionid) { builder.AddInt(1, sessionid, 0); }
  public static void AddNickname(FlatBufferBuilder builder, StringOffset nicknameOffset) { builder.AddOffset(2, nicknameOffset.Value, 0); }
  public static Offset<NetworkMessage.SC_LoginAns> EndSC_LoginAns(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<NetworkMessage.SC_LoginAns>(o);
  }
  public SC_LoginAns_FBS UnPack() {
    var _o = new SC_LoginAns_FBS();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SC_LoginAns_FBS _o) {
    _o.Errorcode = this.Errorcode;
    _o.Sessionid = this.Sessionid;
    _o.Nickname = this.Nickname;
  }
  public static Offset<NetworkMessage.SC_LoginAns> Pack(FlatBufferBuilder builder, SC_LoginAns_FBS _o) {
    if (_o == null) return default(Offset<NetworkMessage.SC_LoginAns>);
    var _nickname = _o.Nickname == null ? default(StringOffset) : builder.CreateString(_o.Nickname);
    return CreateSC_LoginAns(
      builder,
      _o.Errorcode,
      _o.Sessionid,
      _nickname);
  }
}

public class SC_LoginAns_FBS
{
  public int Errorcode { get; set; }
  public int Sessionid { get; set; }
  public string Nickname { get; set; }

  public SC_LoginAns_FBS() {
    this.Errorcode = 0;
    this.Sessionid = 0;
    this.Nickname = null;
  }
}


static public class SC_LoginAnsVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Errorcode*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*Sessionid*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 8 /*Nickname*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}
public struct SC_AccountInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static SC_AccountInfo GetRootAsSC_AccountInfo(ByteBuffer _bb) { return GetRootAsSC_AccountInfo(_bb, new SC_AccountInfo()); }
  public static SC_AccountInfo GetRootAsSC_AccountInfo(ByteBuffer _bb, SC_AccountInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SC_AccountInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Chartype { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<NetworkMessage.SC_AccountInfo> CreateSC_AccountInfo(FlatBufferBuilder builder,
      int chartype = 0) {
    builder.StartTable(1);
    SC_AccountInfo.AddChartype(builder, chartype);
    return SC_AccountInfo.EndSC_AccountInfo(builder);
  }

  public static void StartSC_AccountInfo(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddChartype(FlatBufferBuilder builder, int chartype) { builder.AddInt(0, chartype, 0); }
  public static Offset<NetworkMessage.SC_AccountInfo> EndSC_AccountInfo(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<NetworkMessage.SC_AccountInfo>(o);
  }
  public SC_AccountInfo_FBS UnPack() {
    var _o = new SC_AccountInfo_FBS();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SC_AccountInfo_FBS _o) {
    _o.Chartype = this.Chartype;
  }
  public static Offset<NetworkMessage.SC_AccountInfo> Pack(FlatBufferBuilder builder, SC_AccountInfo_FBS _o) {
    if (_o == null) return default(Offset<NetworkMessage.SC_AccountInfo>);
    return CreateSC_AccountInfo(
      builder,
      _o.Chartype);
  }
}

public class SC_AccountInfo_FBS
{
  public int Chartype { get; set; }

  public SC_AccountInfo_FBS() {
    this.Chartype = 0;
  }
}


static public class SC_AccountInfoVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Chartype*/, 4 /*int*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}
public struct SC_WorldEnterNotify : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static SC_WorldEnterNotify GetRootAsSC_WorldEnterNotify(ByteBuffer _bb) { return GetRootAsSC_WorldEnterNotify(_bb, new SC_WorldEnterNotify()); }
  public static SC_WorldEnterNotify GetRootAsSC_WorldEnterNotify(ByteBuffer _bb, SC_WorldEnterNotify obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SC_WorldEnterNotify __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Zoneid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<NetworkMessage.SC_WorldEnterNotify> CreateSC_WorldEnterNotify(FlatBufferBuilder builder,
      int zoneid = 0) {
    builder.StartTable(1);
    SC_WorldEnterNotify.AddZoneid(builder, zoneid);
    return SC_WorldEnterNotify.EndSC_WorldEnterNotify(builder);
  }

  public static void StartSC_WorldEnterNotify(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddZoneid(FlatBufferBuilder builder, int zoneid) { builder.AddInt(0, zoneid, 0); }
  public static Offset<NetworkMessage.SC_WorldEnterNotify> EndSC_WorldEnterNotify(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<NetworkMessage.SC_WorldEnterNotify>(o);
  }
  public SC_WorldEnterNotify_FBS UnPack() {
    var _o = new SC_WorldEnterNotify_FBS();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SC_WorldEnterNotify_FBS _o) {
    _o.Zoneid = this.Zoneid;
  }
  public static Offset<NetworkMessage.SC_WorldEnterNotify> Pack(FlatBufferBuilder builder, SC_WorldEnterNotify_FBS _o) {
    if (_o == null) return default(Offset<NetworkMessage.SC_WorldEnterNotify>);
    return CreateSC_WorldEnterNotify(
      builder,
      _o.Zoneid);
  }
}

public class SC_WorldEnterNotify_FBS
{
  public int Zoneid { get; set; }

  public SC_WorldEnterNotify_FBS() {
    this.Zoneid = 0;
  }
}


static public class SC_WorldEnterNotifyVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Zoneid*/, 4 /*int*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}
public struct SC_CreatePlayer : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static SC_CreatePlayer GetRootAsSC_CreatePlayer(ByteBuffer _bb) { return GetRootAsSC_CreatePlayer(_bb, new SC_CreatePlayer()); }
  public static SC_CreatePlayer GetRootAsSC_CreatePlayer(ByteBuffer _bb, SC_CreatePlayer obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SC_CreatePlayer __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public NetworkMessage.CreatePlayerInfo? Player { get { int o = __p.__offset(4); return o != 0 ? (NetworkMessage.CreatePlayerInfo?)(new NetworkMessage.CreatePlayerInfo()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<NetworkMessage.SC_CreatePlayer> CreateSC_CreatePlayer(FlatBufferBuilder builder,
      Offset<NetworkMessage.CreatePlayerInfo> playerOffset = default(Offset<NetworkMessage.CreatePlayerInfo>)) {
    builder.StartTable(1);
    SC_CreatePlayer.AddPlayer(builder, playerOffset);
    return SC_CreatePlayer.EndSC_CreatePlayer(builder);
  }

  public static void StartSC_CreatePlayer(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddPlayer(FlatBufferBuilder builder, Offset<NetworkMessage.CreatePlayerInfo> playerOffset) { builder.AddOffset(0, playerOffset.Value, 0); }
  public static Offset<NetworkMessage.SC_CreatePlayer> EndSC_CreatePlayer(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<NetworkMessage.SC_CreatePlayer>(o);
  }
  public SC_CreatePlayer_FBS UnPack() {
    var _o = new SC_CreatePlayer_FBS();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SC_CreatePlayer_FBS _o) {
    _o.Player = this.Player.HasValue ? this.Player.Value.UnPack() : null;
  }
  public static Offset<NetworkMessage.SC_CreatePlayer> Pack(FlatBufferBuilder builder, SC_CreatePlayer_FBS _o) {
    if (_o == null) return default(Offset<NetworkMessage.SC_CreatePlayer>);
    var _player = _o.Player == null ? default(Offset<NetworkMessage.CreatePlayerInfo>) : NetworkMessage.CreatePlayerInfo.Pack(builder, _o.Player);
    return CreateSC_CreatePlayer(
      builder,
      _player);
  }
}

public class SC_CreatePlayer_FBS
{
  public NetworkMessage.CreatePlayerInfo_FBS Player { get; set; }

  public SC_CreatePlayer_FBS() {
    this.Player = null;
  }
}


static public class SC_CreatePlayerVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyTable(tablePos, 4 /*Player*/, NetworkMessage.CreatePlayerInfoVerify.Verify, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}
public struct SC_CreatePlayers : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static SC_CreatePlayers GetRootAsSC_CreatePlayers(ByteBuffer _bb) { return GetRootAsSC_CreatePlayers(_bb, new SC_CreatePlayers()); }
  public static SC_CreatePlayers GetRootAsSC_CreatePlayers(ByteBuffer _bb, SC_CreatePlayers obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SC_CreatePlayers __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public NetworkMessage.CreatePlayerInfo? Player(int j) { int o = __p.__offset(4); return o != 0 ? (NetworkMessage.CreatePlayerInfo?)(new NetworkMessage.CreatePlayerInfo()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int PlayerLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<NetworkMessage.SC_CreatePlayers> CreateSC_CreatePlayers(FlatBufferBuilder builder,
      VectorOffset playerOffset = default(VectorOffset)) {
    builder.StartTable(1);
    SC_CreatePlayers.AddPlayer(builder, playerOffset);
    return SC_CreatePlayers.EndSC_CreatePlayers(builder);
  }

  public static void StartSC_CreatePlayers(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddPlayer(FlatBufferBuilder builder, VectorOffset playerOffset) { builder.AddOffset(0, playerOffset.Value, 0); }
  public static VectorOffset CreatePlayerVector(FlatBufferBuilder builder, Offset<NetworkMessage.CreatePlayerInfo>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreatePlayerVectorBlock(FlatBufferBuilder builder, Offset<NetworkMessage.CreatePlayerInfo>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreatePlayerVectorBlock(FlatBufferBuilder builder, ArraySegment<Offset<NetworkMessage.CreatePlayerInfo>> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreatePlayerVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<Offset<NetworkMessage.CreatePlayerInfo>>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartPlayerVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<NetworkMessage.SC_CreatePlayers> EndSC_CreatePlayers(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<NetworkMessage.SC_CreatePlayers>(o);
  }
  public SC_CreatePlayers_FBS UnPack() {
    var _o = new SC_CreatePlayers_FBS();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SC_CreatePlayers_FBS _o) {
    _o.Player = new List<NetworkMessage.CreatePlayerInfo_FBS>();
    for (var _j = 0; _j < this.PlayerLength; ++_j) {_o.Player.Add(this.Player(_j).HasValue ? this.Player(_j).Value.UnPack() : null);}
  }
  public static Offset<NetworkMessage.SC_CreatePlayers> Pack(FlatBufferBuilder builder, SC_CreatePlayers_FBS _o) {
    if (_o == null) return default(Offset<NetworkMessage.SC_CreatePlayers>);
    var _player = default(VectorOffset);
    if (_o.Player != null) {
      var __player = new Offset<NetworkMessage.CreatePlayerInfo>[_o.Player.Count];
      for (var _j = 0; _j < __player.Length; ++_j) { __player[_j] = NetworkMessage.CreatePlayerInfo.Pack(builder, _o.Player[_j]); }
      _player = CreatePlayerVector(builder, __player);
    }
    return CreateSC_CreatePlayers(
      builder,
      _player);
  }
}

public class SC_CreatePlayers_FBS
{
  public List<NetworkMessage.CreatePlayerInfo_FBS> Player { get; set; }

  public SC_CreatePlayers_FBS() {
    this.Player = null;
  }
}


static public class SC_CreatePlayersVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyVectorOfTables(tablePos, 4 /*Player*/, NetworkMessage.CreatePlayerInfoVerify.Verify, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}
public struct SC_RemovePlayer : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static SC_RemovePlayer GetRootAsSC_RemovePlayer(ByteBuffer _bb) { return GetRootAsSC_RemovePlayer(_bb, new SC_RemovePlayer()); }
  public static SC_RemovePlayer GetRootAsSC_RemovePlayer(ByteBuffer _bb, SC_RemovePlayer obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SC_RemovePlayer __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Sessionid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<NetworkMessage.SC_RemovePlayer> CreateSC_RemovePlayer(FlatBufferBuilder builder,
      int sessionid = 0) {
    builder.StartTable(1);
    SC_RemovePlayer.AddSessionid(builder, sessionid);
    return SC_RemovePlayer.EndSC_RemovePlayer(builder);
  }

  public static void StartSC_RemovePlayer(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddSessionid(FlatBufferBuilder builder, int sessionid) { builder.AddInt(0, sessionid, 0); }
  public static Offset<NetworkMessage.SC_RemovePlayer> EndSC_RemovePlayer(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<NetworkMessage.SC_RemovePlayer>(o);
  }
  public SC_RemovePlayer_FBS UnPack() {
    var _o = new SC_RemovePlayer_FBS();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SC_RemovePlayer_FBS _o) {
    _o.Sessionid = this.Sessionid;
  }
  public static Offset<NetworkMessage.SC_RemovePlayer> Pack(FlatBufferBuilder builder, SC_RemovePlayer_FBS _o) {
    if (_o == null) return default(Offset<NetworkMessage.SC_RemovePlayer>);
    return CreateSC_RemovePlayer(
      builder,
      _o.Sessionid);
  }
}

public class SC_RemovePlayer_FBS
{
  public int Sessionid { get; set; }

  public SC_RemovePlayer_FBS() {
    this.Sessionid = 0;
  }
}


static public class SC_RemovePlayerVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Sessionid*/, 4 /*int*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}
public struct SC_UpdatePosition : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static SC_UpdatePosition GetRootAsSC_UpdatePosition(ByteBuffer _bb) { return GetRootAsSC_UpdatePosition(_bb, new SC_UpdatePosition()); }
  public static SC_UpdatePosition GetRootAsSC_UpdatePosition(ByteBuffer _bb, SC_UpdatePosition obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SC_UpdatePosition __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Sessionid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Head { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public NetworkMessage.Vector3? Position { get { int o = __p.__offset(8); return o != 0 ? (NetworkMessage.Vector3?)(new NetworkMessage.Vector3()).__assign(o + __p.bb_pos, __p.bb) : null; } }

  public static Offset<NetworkMessage.SC_UpdatePosition> CreateSC_UpdatePosition(FlatBufferBuilder builder,
      int sessionid = 0,
      int head = 0,
      NetworkMessage.Vector3_FBS position = null) {
    builder.StartTable(3);
    SC_UpdatePosition.AddPosition(builder, NetworkMessage.Vector3.Pack(builder, position));
    SC_UpdatePosition.AddHead(builder, head);
    SC_UpdatePosition.AddSessionid(builder, sessionid);
    return SC_UpdatePosition.EndSC_UpdatePosition(builder);
  }

  public static void StartSC_UpdatePosition(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddSessionid(FlatBufferBuilder builder, int sessionid) { builder.AddInt(0, sessionid, 0); }
  public static void AddHead(FlatBufferBuilder builder, int head) { builder.AddInt(1, head, 0); }
  public static void AddPosition(FlatBufferBuilder builder, Offset<NetworkMessage.Vector3> positionOffset) { builder.AddStruct(2, positionOffset.Value, 0); }
  public static Offset<NetworkMessage.SC_UpdatePosition> EndSC_UpdatePosition(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<NetworkMessage.SC_UpdatePosition>(o);
  }
  public SC_UpdatePosition_FBS UnPack() {
    var _o = new SC_UpdatePosition_FBS();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SC_UpdatePosition_FBS _o) {
    _o.Sessionid = this.Sessionid;
    _o.Head = this.Head;
    _o.Position = this.Position.HasValue ? this.Position.Value.UnPack() : null;
  }
  public static Offset<NetworkMessage.SC_UpdatePosition> Pack(FlatBufferBuilder builder, SC_UpdatePosition_FBS _o) {
    if (_o == null) return default(Offset<NetworkMessage.SC_UpdatePosition>);
    return CreateSC_UpdatePosition(
      builder,
      _o.Sessionid,
      _o.Head,
      _o.Position);
  }
}

public class SC_UpdatePosition_FBS
{
  public int Sessionid { get; set; }
  public int Head { get; set; }
  public NetworkMessage.Vector3_FBS Position { get; set; }

  public SC_UpdatePosition_FBS() {
    this.Sessionid = 0;
    this.Head = 0;
    this.Position = new NetworkMessage.Vector3_FBS();
  }
}


static public class SC_UpdatePositionVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Sessionid*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*Head*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 8 /*Position*/, 12 /*NetworkMessage.Vector3*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}
public struct SC_PlayerUpdate : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static SC_PlayerUpdate GetRootAsSC_PlayerUpdate(ByteBuffer _bb) { return GetRootAsSC_PlayerUpdate(_bb, new SC_PlayerUpdate()); }
  public static SC_PlayerUpdate GetRootAsSC_PlayerUpdate(ByteBuffer _bb, SC_PlayerUpdate obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SC_PlayerUpdate __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Head { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Health { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int State { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<NetworkMessage.SC_PlayerUpdate> CreateSC_PlayerUpdate(FlatBufferBuilder builder,
      int head = 0,
      int health = 0,
      int state = 0) {
    builder.StartTable(3);
    SC_PlayerUpdate.AddState(builder, state);
    SC_PlayerUpdate.AddHealth(builder, health);
    SC_PlayerUpdate.AddHead(builder, head);
    return SC_PlayerUpdate.EndSC_PlayerUpdate(builder);
  }

  public static void StartSC_PlayerUpdate(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddHead(FlatBufferBuilder builder, int head) { builder.AddInt(0, head, 0); }
  public static void AddHealth(FlatBufferBuilder builder, int health) { builder.AddInt(1, health, 0); }
  public static void AddState(FlatBufferBuilder builder, int state) { builder.AddInt(2, state, 0); }
  public static Offset<NetworkMessage.SC_PlayerUpdate> EndSC_PlayerUpdate(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<NetworkMessage.SC_PlayerUpdate>(o);
  }
  public SC_PlayerUpdate_FBS UnPack() {
    var _o = new SC_PlayerUpdate_FBS();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SC_PlayerUpdate_FBS _o) {
    _o.Head = this.Head;
    _o.Health = this.Health;
    _o.State = this.State;
  }
  public static Offset<NetworkMessage.SC_PlayerUpdate> Pack(FlatBufferBuilder builder, SC_PlayerUpdate_FBS _o) {
    if (_o == null) return default(Offset<NetworkMessage.SC_PlayerUpdate>);
    return CreateSC_PlayerUpdate(
      builder,
      _o.Head,
      _o.Health,
      _o.State);
  }
}

public class SC_PlayerUpdate_FBS
{
  public int Head { get; set; }
  public int Health { get; set; }
  public int State { get; set; }

  public SC_PlayerUpdate_FBS() {
    this.Head = 0;
    this.Health = 0;
    this.State = 0;
  }
}


static public class SC_PlayerUpdateVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Head*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*Health*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 8 /*State*/, 4 /*int*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}
public struct SC_UpdateIcons : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static SC_UpdateIcons GetRootAsSC_UpdateIcons(ByteBuffer _bb) { return GetRootAsSC_UpdateIcons(_bb, new SC_UpdateIcons()); }
  public static SC_UpdateIcons GetRootAsSC_UpdateIcons(ByteBuffer _bb, SC_UpdateIcons obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SC_UpdateIcons __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public NetworkMessage.ActiveIconInfo? Icons(int j) { int o = __p.__offset(4); return o != 0 ? (NetworkMessage.ActiveIconInfo?)(new NetworkMessage.ActiveIconInfo()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int IconsLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<NetworkMessage.SC_UpdateIcons> CreateSC_UpdateIcons(FlatBufferBuilder builder,
      VectorOffset iconsOffset = default(VectorOffset)) {
    builder.StartTable(1);
    SC_UpdateIcons.AddIcons(builder, iconsOffset);
    return SC_UpdateIcons.EndSC_UpdateIcons(builder);
  }

  public static void StartSC_UpdateIcons(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddIcons(FlatBufferBuilder builder, VectorOffset iconsOffset) { builder.AddOffset(0, iconsOffset.Value, 0); }
  public static VectorOffset CreateIconsVector(FlatBufferBuilder builder, Offset<NetworkMessage.ActiveIconInfo>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateIconsVectorBlock(FlatBufferBuilder builder, Offset<NetworkMessage.ActiveIconInfo>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateIconsVectorBlock(FlatBufferBuilder builder, ArraySegment<Offset<NetworkMessage.ActiveIconInfo>> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateIconsVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<Offset<NetworkMessage.ActiveIconInfo>>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartIconsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<NetworkMessage.SC_UpdateIcons> EndSC_UpdateIcons(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<NetworkMessage.SC_UpdateIcons>(o);
  }
  public SC_UpdateIcons_FBS UnPack() {
    var _o = new SC_UpdateIcons_FBS();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SC_UpdateIcons_FBS _o) {
    _o.Icons = new List<NetworkMessage.ActiveIconInfo_FBS>();
    for (var _j = 0; _j < this.IconsLength; ++_j) {_o.Icons.Add(this.Icons(_j).HasValue ? this.Icons(_j).Value.UnPack() : null);}
  }
  public static Offset<NetworkMessage.SC_UpdateIcons> Pack(FlatBufferBuilder builder, SC_UpdateIcons_FBS _o) {
    if (_o == null) return default(Offset<NetworkMessage.SC_UpdateIcons>);
    var _icons = default(VectorOffset);
    if (_o.Icons != null) {
      var __icons = new Offset<NetworkMessage.ActiveIconInfo>[_o.Icons.Count];
      for (var _j = 0; _j < __icons.Length; ++_j) { __icons[_j] = NetworkMessage.ActiveIconInfo.Pack(builder, _o.Icons[_j]); }
      _icons = CreateIconsVector(builder, __icons);
    }
    return CreateSC_UpdateIcons(
      builder,
      _icons);
  }
}

public class SC_UpdateIcons_FBS
{
  public List<NetworkMessage.ActiveIconInfo_FBS> Icons { get; set; }

  public SC_UpdateIcons_FBS() {
    this.Icons = null;
  }
}


static public class SC_UpdateIconsVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyVectorOfTables(tablePos, 4 /*Icons*/, NetworkMessage.ActiveIconInfoVerify.Verify, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}
public struct SC_ObjectGuildID : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static SC_ObjectGuildID GetRootAsSC_ObjectGuildID(ByteBuffer _bb) { return GetRootAsSC_ObjectGuildID(_bb, new SC_ObjectGuildID()); }
  public static SC_ObjectGuildID GetRootAsSC_ObjectGuildID(ByteBuffer _bb, SC_ObjectGuildID obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SC_ObjectGuildID __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ushort Objectid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public ushort Guildid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }

  public static Offset<NetworkMessage.SC_ObjectGuildID> CreateSC_ObjectGuildID(FlatBufferBuilder builder,
      ushort objectid = 0,
      ushort guildid = 0) {
    builder.StartTable(2);
    SC_ObjectGuildID.AddGuildid(builder, guildid);
    SC_ObjectGuildID.AddObjectid(builder, objectid);
    return SC_ObjectGuildID.EndSC_ObjectGuildID(builder);
  }

  public static void StartSC_ObjectGuildID(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddObjectid(FlatBufferBuilder builder, ushort objectid) { builder.AddUshort(0, objectid, 0); }
  public static void AddGuildid(FlatBufferBuilder builder, ushort guildid) { builder.AddUshort(1, guildid, 0); }
  public static Offset<NetworkMessage.SC_ObjectGuildID> EndSC_ObjectGuildID(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<NetworkMessage.SC_ObjectGuildID>(o);
  }
  public SC_ObjectGuildID_FBS UnPack() {
    var _o = new SC_ObjectGuildID_FBS();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SC_ObjectGuildID_FBS _o) {
    _o.Objectid = this.Objectid;
    _o.Guildid = this.Guildid;
  }
  public static Offset<NetworkMessage.SC_ObjectGuildID> Pack(FlatBufferBuilder builder, SC_ObjectGuildID_FBS _o) {
    if (_o == null) return default(Offset<NetworkMessage.SC_ObjectGuildID>);
    return CreateSC_ObjectGuildID(
      builder,
      _o.Objectid,
      _o.Guildid);
  }
}

public class SC_ObjectGuildID_FBS
{
  public ushort Objectid { get; set; }
  public ushort Guildid { get; set; }

  public SC_ObjectGuildID_FBS() {
    this.Objectid = 0;
    this.Guildid = 0;
  }
}


static public class SC_ObjectGuildIDVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Objectid*/, 2 /*ushort*/, 2, false)
      && verifier.VerifyField(tablePos, 6 /*Guildid*/, 2 /*ushort*/, 2, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}
public struct SC_VariousUpdate : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static SC_VariousUpdate GetRootAsSC_VariousUpdate(ByteBuffer _bb) { return GetRootAsSC_VariousUpdate(_bb, new SC_VariousUpdate()); }
  public static SC_VariousUpdate GetRootAsSC_VariousUpdate(ByteBuffer _bb, SC_VariousUpdate obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SC_VariousUpdate __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ushort Level { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public int Maxhealth { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string Name { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNameBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetNameArray() { return __p.__vector_as_array<byte>(8); }
  public string Classname { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetClassnameBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetClassnameBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetClassnameArray() { return __p.__vector_as_array<byte>(10); }
  public string Baseclass { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetBaseclassBytes() { return __p.__vector_as_span<byte>(12, 1); }
#else
  public ArraySegment<byte>? GetBaseclassBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public byte[] GetBaseclassArray() { return __p.__vector_as_array<byte>(12); }
  public string Lastname { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetLastnameBytes() { return __p.__vector_as_span<byte>(14, 1); }
#else
  public ArraySegment<byte>? GetLastnameBytes() { return __p.__vector_as_arraysegment(14); }
#endif
  public byte[] GetLastnameArray() { return __p.__vector_as_array<byte>(14); }
  public string Guildname { get { int o = __p.__offset(16); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetGuildnameBytes() { return __p.__vector_as_span<byte>(16, 1); }
#else
  public ArraySegment<byte>? GetGuildnameBytes() { return __p.__vector_as_arraysegment(16); }
#endif
  public byte[] GetGuildnameArray() { return __p.__vector_as_array<byte>(16); }
  public string Language { get { int o = __p.__offset(18); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetLanguageBytes() { return __p.__vector_as_span<byte>(18, 1); }
#else
  public ArraySegment<byte>? GetLanguageBytes() { return __p.__vector_as_arraysegment(18); }
#endif
  public byte[] GetLanguageArray() { return __p.__vector_as_array<byte>(18); }

  public static Offset<NetworkMessage.SC_VariousUpdate> CreateSC_VariousUpdate(FlatBufferBuilder builder,
      ushort level = 0,
      int maxhealth = 0,
      StringOffset nameOffset = default(StringOffset),
      StringOffset classnameOffset = default(StringOffset),
      StringOffset baseclassOffset = default(StringOffset),
      StringOffset lastnameOffset = default(StringOffset),
      StringOffset guildnameOffset = default(StringOffset),
      StringOffset languageOffset = default(StringOffset)) {
    builder.StartTable(8);
    SC_VariousUpdate.AddLanguage(builder, languageOffset);
    SC_VariousUpdate.AddGuildname(builder, guildnameOffset);
    SC_VariousUpdate.AddLastname(builder, lastnameOffset);
    SC_VariousUpdate.AddBaseclass(builder, baseclassOffset);
    SC_VariousUpdate.AddClassname(builder, classnameOffset);
    SC_VariousUpdate.AddName(builder, nameOffset);
    SC_VariousUpdate.AddMaxhealth(builder, maxhealth);
    SC_VariousUpdate.AddLevel(builder, level);
    return SC_VariousUpdate.EndSC_VariousUpdate(builder);
  }

  public static void StartSC_VariousUpdate(FlatBufferBuilder builder) { builder.StartTable(8); }
  public static void AddLevel(FlatBufferBuilder builder, ushort level) { builder.AddUshort(0, level, 0); }
  public static void AddMaxhealth(FlatBufferBuilder builder, int maxhealth) { builder.AddInt(1, maxhealth, 0); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(2, nameOffset.Value, 0); }
  public static void AddClassname(FlatBufferBuilder builder, StringOffset classnameOffset) { builder.AddOffset(3, classnameOffset.Value, 0); }
  public static void AddBaseclass(FlatBufferBuilder builder, StringOffset baseclassOffset) { builder.AddOffset(4, baseclassOffset.Value, 0); }
  public static void AddLastname(FlatBufferBuilder builder, StringOffset lastnameOffset) { builder.AddOffset(5, lastnameOffset.Value, 0); }
  public static void AddGuildname(FlatBufferBuilder builder, StringOffset guildnameOffset) { builder.AddOffset(6, guildnameOffset.Value, 0); }
  public static void AddLanguage(FlatBufferBuilder builder, StringOffset languageOffset) { builder.AddOffset(7, languageOffset.Value, 0); }
  public static Offset<NetworkMessage.SC_VariousUpdate> EndSC_VariousUpdate(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<NetworkMessage.SC_VariousUpdate>(o);
  }
  public SC_VariousUpdate_FBS UnPack() {
    var _o = new SC_VariousUpdate_FBS();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SC_VariousUpdate_FBS _o) {
    _o.Level = this.Level;
    _o.Maxhealth = this.Maxhealth;
    _o.Name = this.Name;
    _o.Classname = this.Classname;
    _o.Baseclass = this.Baseclass;
    _o.Lastname = this.Lastname;
    _o.Guildname = this.Guildname;
    _o.Language = this.Language;
  }
  public static Offset<NetworkMessage.SC_VariousUpdate> Pack(FlatBufferBuilder builder, SC_VariousUpdate_FBS _o) {
    if (_o == null) return default(Offset<NetworkMessage.SC_VariousUpdate>);
    var _name = _o.Name == null ? default(StringOffset) : builder.CreateString(_o.Name);
    var _classname = _o.Classname == null ? default(StringOffset) : builder.CreateString(_o.Classname);
    var _baseclass = _o.Baseclass == null ? default(StringOffset) : builder.CreateString(_o.Baseclass);
    var _lastname = _o.Lastname == null ? default(StringOffset) : builder.CreateString(_o.Lastname);
    var _guildname = _o.Guildname == null ? default(StringOffset) : builder.CreateString(_o.Guildname);
    var _language = _o.Language == null ? default(StringOffset) : builder.CreateString(_o.Language);
    return CreateSC_VariousUpdate(
      builder,
      _o.Level,
      _o.Maxhealth,
      _name,
      _classname,
      _baseclass,
      _lastname,
      _guildname,
      _language);
  }
}

public class SC_VariousUpdate_FBS
{
  public ushort Level { get; set; }
  public int Maxhealth { get; set; }
  public string Name { get; set; }
  public string Classname { get; set; }
  public string Baseclass { get; set; }
  public string Lastname { get; set; }
  public string Guildname { get; set; }
  public string Language { get; set; }

  public SC_VariousUpdate_FBS() {
    this.Level = 0;
    this.Maxhealth = 0;
    this.Name = null;
    this.Classname = null;
    this.Baseclass = null;
    this.Lastname = null;
    this.Guildname = null;
    this.Language = null;
  }
}


static public class SC_VariousUpdateVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Level*/, 2 /*ushort*/, 2, false)
      && verifier.VerifyField(tablePos, 6 /*Maxhealth*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 8 /*Name*/, false)
      && verifier.VerifyString(tablePos, 10 /*Classname*/, false)
      && verifier.VerifyString(tablePos, 12 /*Baseclass*/, false)
      && verifier.VerifyString(tablePos, 14 /*Lastname*/, false)
      && verifier.VerifyString(tablePos, 16 /*Guildname*/, false)
      && verifier.VerifyString(tablePos, 18 /*Language*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}
public struct SC_RemoveObject : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static SC_RemoveObject GetRootAsSC_RemoveObject(ByteBuffer _bb) { return GetRootAsSC_RemoveObject(_bb, new SC_RemoveObject()); }
  public static SC_RemoveObject GetRootAsSC_RemoveObject(ByteBuffer _bb, SC_RemoveObject obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SC_RemoveObject __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ushort Objectid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public ushort Type { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }

  public static Offset<NetworkMessage.SC_RemoveObject> CreateSC_RemoveObject(FlatBufferBuilder builder,
      ushort objectid = 0,
      ushort type = 0) {
    builder.StartTable(2);
    SC_RemoveObject.AddType(builder, type);
    SC_RemoveObject.AddObjectid(builder, objectid);
    return SC_RemoveObject.EndSC_RemoveObject(builder);
  }

  public static void StartSC_RemoveObject(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddObjectid(FlatBufferBuilder builder, ushort objectid) { builder.AddUshort(0, objectid, 0); }
  public static void AddType(FlatBufferBuilder builder, ushort type) { builder.AddUshort(1, type, 0); }
  public static Offset<NetworkMessage.SC_RemoveObject> EndSC_RemoveObject(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<NetworkMessage.SC_RemoveObject>(o);
  }
  public SC_RemoveObject_FBS UnPack() {
    var _o = new SC_RemoveObject_FBS();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SC_RemoveObject_FBS _o) {
    _o.Objectid = this.Objectid;
    _o.Type = this.Type;
  }
  public static Offset<NetworkMessage.SC_RemoveObject> Pack(FlatBufferBuilder builder, SC_RemoveObject_FBS _o) {
    if (_o == null) return default(Offset<NetworkMessage.SC_RemoveObject>);
    return CreateSC_RemoveObject(
      builder,
      _o.Objectid,
      _o.Type);
  }
}

public class SC_RemoveObject_FBS
{
  public ushort Objectid { get; set; }
  public ushort Type { get; set; }

  public SC_RemoveObject_FBS() {
    this.Objectid = 0;
    this.Type = 0;
  }
}


static public class SC_RemoveObjectVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Objectid*/, 2 /*ushort*/, 2, false)
      && verifier.VerifyField(tablePos, 6 /*Type*/, 2 /*ushort*/, 2, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}
public struct SC_PlayerCreate : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static SC_PlayerCreate GetRootAsSC_PlayerCreate(ByteBuffer _bb) { return GetRootAsSC_PlayerCreate(_bb, new SC_PlayerCreate()); }
  public static SC_PlayerCreate GetRootAsSC_PlayerCreate(ByteBuffer _bb, SC_PlayerCreate obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SC_PlayerCreate __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public NetworkMessage.Vector3Int? Position { get { int o = __p.__offset(4); return o != 0 ? (NetworkMessage.Vector3Int?)(new NetworkMessage.Vector3Int()).__assign(o + __p.bb_pos, __p.bb) : null; } }
  public int Sessionid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public ushort Objectid { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public ushort Heading { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public ushort Model { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public byte Level { get { int o = __p.__offset(14); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }
  public byte Flags { get { int o = __p.__offset(16); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }
  public string Name { get { int o = __p.__offset(18); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNameBytes() { return __p.__vector_as_span<byte>(18, 1); }
#else
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(18); }
#endif
  public byte[] GetNameArray() { return __p.__vector_as_array<byte>(18); }
  public string Guildname { get { int o = __p.__offset(20); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetGuildnameBytes() { return __p.__vector_as_span<byte>(20, 1); }
#else
  public ArraySegment<byte>? GetGuildnameBytes() { return __p.__vector_as_arraysegment(20); }
#endif
  public byte[] GetGuildnameArray() { return __p.__vector_as_array<byte>(20); }
  public string Lastname { get { int o = __p.__offset(22); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetLastnameBytes() { return __p.__vector_as_span<byte>(22, 1); }
#else
  public ArraySegment<byte>? GetLastnameBytes() { return __p.__vector_as_arraysegment(22); }
#endif
  public byte[] GetLastnameArray() { return __p.__vector_as_array<byte>(22); }

  public static Offset<NetworkMessage.SC_PlayerCreate> CreateSC_PlayerCreate(FlatBufferBuilder builder,
      NetworkMessage.Vector3Int_FBS position = null,
      int sessionid = 0,
      ushort objectid = 0,
      ushort heading = 0,
      ushort model = 0,
      byte level = 0,
      byte flags = 0,
      StringOffset nameOffset = default(StringOffset),
      StringOffset guildnameOffset = default(StringOffset),
      StringOffset lastnameOffset = default(StringOffset)) {
    builder.StartTable(10);
    SC_PlayerCreate.AddLastname(builder, lastnameOffset);
    SC_PlayerCreate.AddGuildname(builder, guildnameOffset);
    SC_PlayerCreate.AddName(builder, nameOffset);
    SC_PlayerCreate.AddSessionid(builder, sessionid);
    SC_PlayerCreate.AddPosition(builder, NetworkMessage.Vector3Int.Pack(builder, position));
    SC_PlayerCreate.AddModel(builder, model);
    SC_PlayerCreate.AddHeading(builder, heading);
    SC_PlayerCreate.AddObjectid(builder, objectid);
    SC_PlayerCreate.AddFlags(builder, flags);
    SC_PlayerCreate.AddLevel(builder, level);
    return SC_PlayerCreate.EndSC_PlayerCreate(builder);
  }

  public static void StartSC_PlayerCreate(FlatBufferBuilder builder) { builder.StartTable(10); }
  public static void AddPosition(FlatBufferBuilder builder, Offset<NetworkMessage.Vector3Int> positionOffset) { builder.AddStruct(0, positionOffset.Value, 0); }
  public static void AddSessionid(FlatBufferBuilder builder, int sessionid) { builder.AddInt(1, sessionid, 0); }
  public static void AddObjectid(FlatBufferBuilder builder, ushort objectid) { builder.AddUshort(2, objectid, 0); }
  public static void AddHeading(FlatBufferBuilder builder, ushort heading) { builder.AddUshort(3, heading, 0); }
  public static void AddModel(FlatBufferBuilder builder, ushort model) { builder.AddUshort(4, model, 0); }
  public static void AddLevel(FlatBufferBuilder builder, byte level) { builder.AddByte(5, level, 0); }
  public static void AddFlags(FlatBufferBuilder builder, byte flags) { builder.AddByte(6, flags, 0); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(7, nameOffset.Value, 0); }
  public static void AddGuildname(FlatBufferBuilder builder, StringOffset guildnameOffset) { builder.AddOffset(8, guildnameOffset.Value, 0); }
  public static void AddLastname(FlatBufferBuilder builder, StringOffset lastnameOffset) { builder.AddOffset(9, lastnameOffset.Value, 0); }
  public static Offset<NetworkMessage.SC_PlayerCreate> EndSC_PlayerCreate(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<NetworkMessage.SC_PlayerCreate>(o);
  }
  public SC_PlayerCreate_FBS UnPack() {
    var _o = new SC_PlayerCreate_FBS();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SC_PlayerCreate_FBS _o) {
    _o.Position = this.Position.HasValue ? this.Position.Value.UnPack() : null;
    _o.Sessionid = this.Sessionid;
    _o.Objectid = this.Objectid;
    _o.Heading = this.Heading;
    _o.Model = this.Model;
    _o.Level = this.Level;
    _o.Flags = this.Flags;
    _o.Name = this.Name;
    _o.Guildname = this.Guildname;
    _o.Lastname = this.Lastname;
  }
  public static Offset<NetworkMessage.SC_PlayerCreate> Pack(FlatBufferBuilder builder, SC_PlayerCreate_FBS _o) {
    if (_o == null) return default(Offset<NetworkMessage.SC_PlayerCreate>);
    var _name = _o.Name == null ? default(StringOffset) : builder.CreateString(_o.Name);
    var _guildname = _o.Guildname == null ? default(StringOffset) : builder.CreateString(_o.Guildname);
    var _lastname = _o.Lastname == null ? default(StringOffset) : builder.CreateString(_o.Lastname);
    return CreateSC_PlayerCreate(
      builder,
      _o.Position,
      _o.Sessionid,
      _o.Objectid,
      _o.Heading,
      _o.Model,
      _o.Level,
      _o.Flags,
      _name,
      _guildname,
      _lastname);
  }
}

public class SC_PlayerCreate_FBS
{
  public NetworkMessage.Vector3Int_FBS Position { get; set; }
  public int Sessionid { get; set; }
  public ushort Objectid { get; set; }
  public ushort Heading { get; set; }
  public ushort Model { get; set; }
  public byte Level { get; set; }
  public byte Flags { get; set; }
  public string Name { get; set; }
  public string Guildname { get; set; }
  public string Lastname { get; set; }

  public SC_PlayerCreate_FBS() {
    this.Position = new NetworkMessage.Vector3Int_FBS();
    this.Sessionid = 0;
    this.Objectid = 0;
    this.Heading = 0;
    this.Model = 0;
    this.Level = 0;
    this.Flags = 0;
    this.Name = null;
    this.Guildname = null;
    this.Lastname = null;
  }
}


static public class SC_PlayerCreateVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Position*/, 12 /*NetworkMessage.Vector3Int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*Sessionid*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 8 /*Objectid*/, 2 /*ushort*/, 2, false)
      && verifier.VerifyField(tablePos, 10 /*Heading*/, 2 /*ushort*/, 2, false)
      && verifier.VerifyField(tablePos, 12 /*Model*/, 2 /*ushort*/, 2, false)
      && verifier.VerifyField(tablePos, 14 /*Level*/, 1 /*byte*/, 1, false)
      && verifier.VerifyField(tablePos, 16 /*Flags*/, 1 /*byte*/, 1, false)
      && verifier.VerifyString(tablePos, 18 /*Name*/, false)
      && verifier.VerifyString(tablePos, 20 /*Guildname*/, false)
      && verifier.VerifyString(tablePos, 22 /*Lastname*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}
public struct SC_ModelChange : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static SC_ModelChange GetRootAsSC_ModelChange(ByteBuffer _bb) { return GetRootAsSC_ModelChange(_bb, new SC_ModelChange()); }
  public static SC_ModelChange GetRootAsSC_ModelChange(ByteBuffer _bb, SC_ModelChange obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SC_ModelChange __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ushort Objectid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public ushort Model { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public int Newsize { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<NetworkMessage.SC_ModelChange> CreateSC_ModelChange(FlatBufferBuilder builder,
      ushort objectid = 0,
      ushort model = 0,
      int newsize = 0) {
    builder.StartTable(3);
    SC_ModelChange.AddNewsize(builder, newsize);
    SC_ModelChange.AddModel(builder, model);
    SC_ModelChange.AddObjectid(builder, objectid);
    return SC_ModelChange.EndSC_ModelChange(builder);
  }

  public static void StartSC_ModelChange(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddObjectid(FlatBufferBuilder builder, ushort objectid) { builder.AddUshort(0, objectid, 0); }
  public static void AddModel(FlatBufferBuilder builder, ushort model) { builder.AddUshort(1, model, 0); }
  public static void AddNewsize(FlatBufferBuilder builder, int newsize) { builder.AddInt(2, newsize, 0); }
  public static Offset<NetworkMessage.SC_ModelChange> EndSC_ModelChange(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<NetworkMessage.SC_ModelChange>(o);
  }
  public SC_ModelChange_FBS UnPack() {
    var _o = new SC_ModelChange_FBS();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SC_ModelChange_FBS _o) {
    _o.Objectid = this.Objectid;
    _o.Model = this.Model;
    _o.Newsize = this.Newsize;
  }
  public static Offset<NetworkMessage.SC_ModelChange> Pack(FlatBufferBuilder builder, SC_ModelChange_FBS _o) {
    if (_o == null) return default(Offset<NetworkMessage.SC_ModelChange>);
    return CreateSC_ModelChange(
      builder,
      _o.Objectid,
      _o.Model,
      _o.Newsize);
  }
}

public class SC_ModelChange_FBS
{
  public ushort Objectid { get; set; }
  public ushort Model { get; set; }
  public int Newsize { get; set; }

  public SC_ModelChange_FBS() {
    this.Objectid = 0;
    this.Model = 0;
    this.Newsize = 0;
  }
}


static public class SC_ModelChangeVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Objectid*/, 2 /*ushort*/, 2, false)
      && verifier.VerifyField(tablePos, 6 /*Model*/, 2 /*ushort*/, 2, false)
      && verifier.VerifyField(tablePos, 8 /*Newsize*/, 4 /*int*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}
public struct SC_ObjectCreate : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static SC_ObjectCreate GetRootAsSC_ObjectCreate(ByteBuffer _bb) { return GetRootAsSC_ObjectCreate(_bb, new SC_ObjectCreate()); }
  public static SC_ObjectCreate GetRootAsSC_ObjectCreate(ByteBuffer _bb, SC_ObjectCreate obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SC_ObjectCreate __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ushort Objectid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public ushort Heading { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public ushort Emblem { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public ushort Model { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public NetworkMessage.Vector3Int? Position { get { int o = __p.__offset(12); return o != 0 ? (NetworkMessage.Vector3Int?)(new NetworkMessage.Vector3Int()).__assign(o + __p.bb_pos, __p.bb) : null; } }
  public int Flags { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string Name { get { int o = __p.__offset(16); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNameBytes() { return __p.__vector_as_span<byte>(16, 1); }
#else
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(16); }
#endif
  public byte[] GetNameArray() { return __p.__vector_as_array<byte>(16); }

  public static Offset<NetworkMessage.SC_ObjectCreate> CreateSC_ObjectCreate(FlatBufferBuilder builder,
      ushort objectid = 0,
      ushort heading = 0,
      ushort emblem = 0,
      ushort model = 0,
      NetworkMessage.Vector3Int_FBS position = null,
      int flags = 0,
      StringOffset nameOffset = default(StringOffset)) {
    builder.StartTable(7);
    SC_ObjectCreate.AddName(builder, nameOffset);
    SC_ObjectCreate.AddFlags(builder, flags);
    SC_ObjectCreate.AddPosition(builder, NetworkMessage.Vector3Int.Pack(builder, position));
    SC_ObjectCreate.AddModel(builder, model);
    SC_ObjectCreate.AddEmblem(builder, emblem);
    SC_ObjectCreate.AddHeading(builder, heading);
    SC_ObjectCreate.AddObjectid(builder, objectid);
    return SC_ObjectCreate.EndSC_ObjectCreate(builder);
  }

  public static void StartSC_ObjectCreate(FlatBufferBuilder builder) { builder.StartTable(7); }
  public static void AddObjectid(FlatBufferBuilder builder, ushort objectid) { builder.AddUshort(0, objectid, 0); }
  public static void AddHeading(FlatBufferBuilder builder, ushort heading) { builder.AddUshort(1, heading, 0); }
  public static void AddEmblem(FlatBufferBuilder builder, ushort emblem) { builder.AddUshort(2, emblem, 0); }
  public static void AddModel(FlatBufferBuilder builder, ushort model) { builder.AddUshort(3, model, 0); }
  public static void AddPosition(FlatBufferBuilder builder, Offset<NetworkMessage.Vector3Int> positionOffset) { builder.AddStruct(4, positionOffset.Value, 0); }
  public static void AddFlags(FlatBufferBuilder builder, int flags) { builder.AddInt(5, flags, 0); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(6, nameOffset.Value, 0); }
  public static Offset<NetworkMessage.SC_ObjectCreate> EndSC_ObjectCreate(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<NetworkMessage.SC_ObjectCreate>(o);
  }
  public SC_ObjectCreate_FBS UnPack() {
    var _o = new SC_ObjectCreate_FBS();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SC_ObjectCreate_FBS _o) {
    _o.Objectid = this.Objectid;
    _o.Heading = this.Heading;
    _o.Emblem = this.Emblem;
    _o.Model = this.Model;
    _o.Position = this.Position.HasValue ? this.Position.Value.UnPack() : null;
    _o.Flags = this.Flags;
    _o.Name = this.Name;
  }
  public static Offset<NetworkMessage.SC_ObjectCreate> Pack(FlatBufferBuilder builder, SC_ObjectCreate_FBS _o) {
    if (_o == null) return default(Offset<NetworkMessage.SC_ObjectCreate>);
    var _name = _o.Name == null ? default(StringOffset) : builder.CreateString(_o.Name);
    return CreateSC_ObjectCreate(
      builder,
      _o.Objectid,
      _o.Heading,
      _o.Emblem,
      _o.Model,
      _o.Position,
      _o.Flags,
      _name);
  }
}

public class SC_ObjectCreate_FBS
{
  public ushort Objectid { get; set; }
  public ushort Heading { get; set; }
  public ushort Emblem { get; set; }
  public ushort Model { get; set; }
  public NetworkMessage.Vector3Int_FBS Position { get; set; }
  public int Flags { get; set; }
  public string Name { get; set; }

  public SC_ObjectCreate_FBS() {
    this.Objectid = 0;
    this.Heading = 0;
    this.Emblem = 0;
    this.Model = 0;
    this.Position = new NetworkMessage.Vector3Int_FBS();
    this.Flags = 0;
    this.Name = null;
  }
}


static public class SC_ObjectCreateVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Objectid*/, 2 /*ushort*/, 2, false)
      && verifier.VerifyField(tablePos, 6 /*Heading*/, 2 /*ushort*/, 2, false)
      && verifier.VerifyField(tablePos, 8 /*Emblem*/, 2 /*ushort*/, 2, false)
      && verifier.VerifyField(tablePos, 10 /*Model*/, 2 /*ushort*/, 2, false)
      && verifier.VerifyField(tablePos, 12 /*Position*/, 12 /*NetworkMessage.Vector3Int*/, 4, false)
      && verifier.VerifyField(tablePos, 14 /*Flags*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 16 /*Name*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}
public struct SC_MovingObjectCreate : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static SC_MovingObjectCreate GetRootAsSC_MovingObjectCreate(ByteBuffer _bb) { return GetRootAsSC_MovingObjectCreate(_bb, new SC_MovingObjectCreate()); }
  public static SC_MovingObjectCreate GetRootAsSC_MovingObjectCreate(ByteBuffer _bb, SC_MovingObjectCreate obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SC_MovingObjectCreate __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ushort Objectid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public ushort Heading { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public NetworkMessage.Vector3Int? Position { get { int o = __p.__offset(8); return o != 0 ? (NetworkMessage.Vector3Int?)(new NetworkMessage.Vector3Int()).__assign(o + __p.bb_pos, __p.bb) : null; } }
  public ushort Model { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public int Flags { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public ushort Emblem { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public string Name { get { int o = __p.__offset(16); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNameBytes() { return __p.__vector_as_span<byte>(16, 1); }
#else
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(16); }
#endif
  public byte[] GetNameArray() { return __p.__vector_as_array<byte>(16); }

  public static Offset<NetworkMessage.SC_MovingObjectCreate> CreateSC_MovingObjectCreate(FlatBufferBuilder builder,
      ushort objectid = 0,
      ushort heading = 0,
      NetworkMessage.Vector3Int_FBS position = null,
      ushort model = 0,
      int flags = 0,
      ushort emblem = 0,
      StringOffset nameOffset = default(StringOffset)) {
    builder.StartTable(7);
    SC_MovingObjectCreate.AddName(builder, nameOffset);
    SC_MovingObjectCreate.AddFlags(builder, flags);
    SC_MovingObjectCreate.AddPosition(builder, NetworkMessage.Vector3Int.Pack(builder, position));
    SC_MovingObjectCreate.AddEmblem(builder, emblem);
    SC_MovingObjectCreate.AddModel(builder, model);
    SC_MovingObjectCreate.AddHeading(builder, heading);
    SC_MovingObjectCreate.AddObjectid(builder, objectid);
    return SC_MovingObjectCreate.EndSC_MovingObjectCreate(builder);
  }

  public static void StartSC_MovingObjectCreate(FlatBufferBuilder builder) { builder.StartTable(7); }
  public static void AddObjectid(FlatBufferBuilder builder, ushort objectid) { builder.AddUshort(0, objectid, 0); }
  public static void AddHeading(FlatBufferBuilder builder, ushort heading) { builder.AddUshort(1, heading, 0); }
  public static void AddPosition(FlatBufferBuilder builder, Offset<NetworkMessage.Vector3Int> positionOffset) { builder.AddStruct(2, positionOffset.Value, 0); }
  public static void AddModel(FlatBufferBuilder builder, ushort model) { builder.AddUshort(3, model, 0); }
  public static void AddFlags(FlatBufferBuilder builder, int flags) { builder.AddInt(4, flags, 0); }
  public static void AddEmblem(FlatBufferBuilder builder, ushort emblem) { builder.AddUshort(5, emblem, 0); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(6, nameOffset.Value, 0); }
  public static Offset<NetworkMessage.SC_MovingObjectCreate> EndSC_MovingObjectCreate(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<NetworkMessage.SC_MovingObjectCreate>(o);
  }
  public SC_MovingObjectCreate_FBS UnPack() {
    var _o = new SC_MovingObjectCreate_FBS();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SC_MovingObjectCreate_FBS _o) {
    _o.Objectid = this.Objectid;
    _o.Heading = this.Heading;
    _o.Position = this.Position.HasValue ? this.Position.Value.UnPack() : null;
    _o.Model = this.Model;
    _o.Flags = this.Flags;
    _o.Emblem = this.Emblem;
    _o.Name = this.Name;
  }
  public static Offset<NetworkMessage.SC_MovingObjectCreate> Pack(FlatBufferBuilder builder, SC_MovingObjectCreate_FBS _o) {
    if (_o == null) return default(Offset<NetworkMessage.SC_MovingObjectCreate>);
    var _name = _o.Name == null ? default(StringOffset) : builder.CreateString(_o.Name);
    return CreateSC_MovingObjectCreate(
      builder,
      _o.Objectid,
      _o.Heading,
      _o.Position,
      _o.Model,
      _o.Flags,
      _o.Emblem,
      _name);
  }
}

public class SC_MovingObjectCreate_FBS
{
  public ushort Objectid { get; set; }
  public ushort Heading { get; set; }
  public NetworkMessage.Vector3Int_FBS Position { get; set; }
  public ushort Model { get; set; }
  public int Flags { get; set; }
  public ushort Emblem { get; set; }
  public string Name { get; set; }

  public SC_MovingObjectCreate_FBS() {
    this.Objectid = 0;
    this.Heading = 0;
    this.Position = new NetworkMessage.Vector3Int_FBS();
    this.Model = 0;
    this.Flags = 0;
    this.Emblem = 0;
    this.Name = null;
  }
}


static public class SC_MovingObjectCreateVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Objectid*/, 2 /*ushort*/, 2, false)
      && verifier.VerifyField(tablePos, 6 /*Heading*/, 2 /*ushort*/, 2, false)
      && verifier.VerifyField(tablePos, 8 /*Position*/, 12 /*NetworkMessage.Vector3Int*/, 4, false)
      && verifier.VerifyField(tablePos, 10 /*Model*/, 2 /*ushort*/, 2, false)
      && verifier.VerifyField(tablePos, 12 /*Flags*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 14 /*Emblem*/, 2 /*ushort*/, 2, false)
      && verifier.VerifyString(tablePos, 16 /*Name*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}
public struct SC_NPCCreate : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static SC_NPCCreate GetRootAsSC_NPCCreate(ByteBuffer _bb) { return GetRootAsSC_NPCCreate(_bb, new SC_NPCCreate()); }
  public static SC_NPCCreate GetRootAsSC_NPCCreate(ByteBuffer _bb, SC_NPCCreate obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SC_NPCCreate __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ushort Objectid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public ushort Heading { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public NetworkMessage.Vector3Int? Position { get { int o = __p.__offset(8); return o != 0 ? (NetworkMessage.Vector3Int?)(new NetworkMessage.Vector3Int()).__assign(o + __p.bb_pos, __p.bb) : null; } }
  public ushort Speed { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public ushort Speedz { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public ushort Model { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public byte Size { get { int o = __p.__offset(16); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }
  public byte Level { get { int o = __p.__offset(18); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }
  public byte Flags { get { int o = __p.__offset(20); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }
  public byte Flags2 { get { int o = __p.__offset(22); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }
  public byte Flags3 { get { int o = __p.__offset(24); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }
  public string Name { get { int o = __p.__offset(26); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNameBytes() { return __p.__vector_as_span<byte>(26, 1); }
#else
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(26); }
#endif
  public byte[] GetNameArray() { return __p.__vector_as_array<byte>(26); }
  public string Guildname { get { int o = __p.__offset(28); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetGuildnameBytes() { return __p.__vector_as_span<byte>(28, 1); }
#else
  public ArraySegment<byte>? GetGuildnameBytes() { return __p.__vector_as_arraysegment(28); }
#endif
  public byte[] GetGuildnameArray() { return __p.__vector_as_array<byte>(28); }

  public static Offset<NetworkMessage.SC_NPCCreate> CreateSC_NPCCreate(FlatBufferBuilder builder,
      ushort objectid = 0,
      ushort heading = 0,
      NetworkMessage.Vector3Int_FBS position = null,
      ushort speed = 0,
      ushort speedz = 0,
      ushort model = 0,
      byte size = 0,
      byte level = 0,
      byte flags = 0,
      byte flags2 = 0,
      byte flags3 = 0,
      StringOffset nameOffset = default(StringOffset),
      StringOffset guildnameOffset = default(StringOffset)) {
    builder.StartTable(13);
    SC_NPCCreate.AddGuildname(builder, guildnameOffset);
    SC_NPCCreate.AddName(builder, nameOffset);
    SC_NPCCreate.AddPosition(builder, NetworkMessage.Vector3Int.Pack(builder, position));
    SC_NPCCreate.AddModel(builder, model);
    SC_NPCCreate.AddSpeedz(builder, speedz);
    SC_NPCCreate.AddSpeed(builder, speed);
    SC_NPCCreate.AddHeading(builder, heading);
    SC_NPCCreate.AddObjectid(builder, objectid);
    SC_NPCCreate.AddFlags3(builder, flags3);
    SC_NPCCreate.AddFlags2(builder, flags2);
    SC_NPCCreate.AddFlags(builder, flags);
    SC_NPCCreate.AddLevel(builder, level);
    SC_NPCCreate.AddSize(builder, size);
    return SC_NPCCreate.EndSC_NPCCreate(builder);
  }

  public static void StartSC_NPCCreate(FlatBufferBuilder builder) { builder.StartTable(13); }
  public static void AddObjectid(FlatBufferBuilder builder, ushort objectid) { builder.AddUshort(0, objectid, 0); }
  public static void AddHeading(FlatBufferBuilder builder, ushort heading) { builder.AddUshort(1, heading, 0); }
  public static void AddPosition(FlatBufferBuilder builder, Offset<NetworkMessage.Vector3Int> positionOffset) { builder.AddStruct(2, positionOffset.Value, 0); }
  public static void AddSpeed(FlatBufferBuilder builder, ushort speed) { builder.AddUshort(3, speed, 0); }
  public static void AddSpeedz(FlatBufferBuilder builder, ushort speedz) { builder.AddUshort(4, speedz, 0); }
  public static void AddModel(FlatBufferBuilder builder, ushort model) { builder.AddUshort(5, model, 0); }
  public static void AddSize(FlatBufferBuilder builder, byte size) { builder.AddByte(6, size, 0); }
  public static void AddLevel(FlatBufferBuilder builder, byte level) { builder.AddByte(7, level, 0); }
  public static void AddFlags(FlatBufferBuilder builder, byte flags) { builder.AddByte(8, flags, 0); }
  public static void AddFlags2(FlatBufferBuilder builder, byte flags2) { builder.AddByte(9, flags2, 0); }
  public static void AddFlags3(FlatBufferBuilder builder, byte flags3) { builder.AddByte(10, flags3, 0); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(11, nameOffset.Value, 0); }
  public static void AddGuildname(FlatBufferBuilder builder, StringOffset guildnameOffset) { builder.AddOffset(12, guildnameOffset.Value, 0); }
  public static Offset<NetworkMessage.SC_NPCCreate> EndSC_NPCCreate(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<NetworkMessage.SC_NPCCreate>(o);
  }
  public SC_NPCCreate_FBS UnPack() {
    var _o = new SC_NPCCreate_FBS();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SC_NPCCreate_FBS _o) {
    _o.Objectid = this.Objectid;
    _o.Heading = this.Heading;
    _o.Position = this.Position.HasValue ? this.Position.Value.UnPack() : null;
    _o.Speed = this.Speed;
    _o.Speedz = this.Speedz;
    _o.Model = this.Model;
    _o.Size = this.Size;
    _o.Level = this.Level;
    _o.Flags = this.Flags;
    _o.Flags2 = this.Flags2;
    _o.Flags3 = this.Flags3;
    _o.Name = this.Name;
    _o.Guildname = this.Guildname;
  }
  public static Offset<NetworkMessage.SC_NPCCreate> Pack(FlatBufferBuilder builder, SC_NPCCreate_FBS _o) {
    if (_o == null) return default(Offset<NetworkMessage.SC_NPCCreate>);
    var _name = _o.Name == null ? default(StringOffset) : builder.CreateString(_o.Name);
    var _guildname = _o.Guildname == null ? default(StringOffset) : builder.CreateString(_o.Guildname);
    return CreateSC_NPCCreate(
      builder,
      _o.Objectid,
      _o.Heading,
      _o.Position,
      _o.Speed,
      _o.Speedz,
      _o.Model,
      _o.Size,
      _o.Level,
      _o.Flags,
      _o.Flags2,
      _o.Flags3,
      _name,
      _guildname);
  }
}

public class SC_NPCCreate_FBS
{
  public ushort Objectid { get; set; }
  public ushort Heading { get; set; }
  public NetworkMessage.Vector3Int_FBS Position { get; set; }
  public ushort Speed { get; set; }
  public ushort Speedz { get; set; }
  public ushort Model { get; set; }
  public byte Size { get; set; }
  public byte Level { get; set; }
  public byte Flags { get; set; }
  public byte Flags2 { get; set; }
  public byte Flags3 { get; set; }
  public string Name { get; set; }
  public string Guildname { get; set; }

  public SC_NPCCreate_FBS() {
    this.Objectid = 0;
    this.Heading = 0;
    this.Position = new NetworkMessage.Vector3Int_FBS();
    this.Speed = 0;
    this.Speedz = 0;
    this.Model = 0;
    this.Size = 0;
    this.Level = 0;
    this.Flags = 0;
    this.Flags2 = 0;
    this.Flags3 = 0;
    this.Name = null;
    this.Guildname = null;
  }
}


static public class SC_NPCCreateVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Objectid*/, 2 /*ushort*/, 2, false)
      && verifier.VerifyField(tablePos, 6 /*Heading*/, 2 /*ushort*/, 2, false)
      && verifier.VerifyField(tablePos, 8 /*Position*/, 12 /*NetworkMessage.Vector3Int*/, 4, false)
      && verifier.VerifyField(tablePos, 10 /*Speed*/, 2 /*ushort*/, 2, false)
      && verifier.VerifyField(tablePos, 12 /*Speedz*/, 2 /*ushort*/, 2, false)
      && verifier.VerifyField(tablePos, 14 /*Model*/, 2 /*ushort*/, 2, false)
      && verifier.VerifyField(tablePos, 16 /*Size*/, 1 /*byte*/, 1, false)
      && verifier.VerifyField(tablePos, 18 /*Level*/, 1 /*byte*/, 1, false)
      && verifier.VerifyField(tablePos, 20 /*Flags*/, 1 /*byte*/, 1, false)
      && verifier.VerifyField(tablePos, 22 /*Flags2*/, 1 /*byte*/, 1, false)
      && verifier.VerifyField(tablePos, 24 /*Flags3*/, 1 /*byte*/, 1, false)
      && verifier.VerifyString(tablePos, 26 /*Name*/, false)
      && verifier.VerifyString(tablePos, 28 /*Guildname*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}
public struct SC_CharacterStatusUpdate : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static SC_CharacterStatusUpdate GetRootAsSC_CharacterStatusUpdate(ByteBuffer _bb) { return GetRootAsSC_CharacterStatusUpdate(_bb, new SC_CharacterStatusUpdate()); }
  public static SC_CharacterStatusUpdate GetRootAsSC_CharacterStatusUpdate(ByteBuffer _bb, SC_CharacterStatusUpdate obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SC_CharacterStatusUpdate __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public bool Sittingflag { get { int o = __p.__offset(4); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public byte Healthpercent { get { int o = __p.__offset(6); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }
  public byte Manapercent { get { int o = __p.__offset(8); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }
  public byte Endurancepercent { get { int o = __p.__offset(10); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }
  public byte Conpercent { get { int o = __p.__offset(12); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }
  public int Maxmana { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Maxendurance { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Maxconcetration { get { int o = __p.__offset(18); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Maxhealth { get { int o = __p.__offset(20); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Endurance { get { int o = __p.__offset(22); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Mana { get { int o = __p.__offset(24); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Concentration { get { int o = __p.__offset(26); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Health { get { int o = __p.__offset(28); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<NetworkMessage.SC_CharacterStatusUpdate> CreateSC_CharacterStatusUpdate(FlatBufferBuilder builder,
      bool sittingflag = false,
      byte healthpercent = 0,
      byte manapercent = 0,
      byte endurancepercent = 0,
      byte conpercent = 0,
      int maxmana = 0,
      int maxendurance = 0,
      int maxconcetration = 0,
      int maxhealth = 0,
      int endurance = 0,
      int mana = 0,
      int concentration = 0,
      int health = 0) {
    builder.StartTable(13);
    SC_CharacterStatusUpdate.AddHealth(builder, health);
    SC_CharacterStatusUpdate.AddConcentration(builder, concentration);
    SC_CharacterStatusUpdate.AddMana(builder, mana);
    SC_CharacterStatusUpdate.AddEndurance(builder, endurance);
    SC_CharacterStatusUpdate.AddMaxhealth(builder, maxhealth);
    SC_CharacterStatusUpdate.AddMaxconcetration(builder, maxconcetration);
    SC_CharacterStatusUpdate.AddMaxendurance(builder, maxendurance);
    SC_CharacterStatusUpdate.AddMaxmana(builder, maxmana);
    SC_CharacterStatusUpdate.AddConpercent(builder, conpercent);
    SC_CharacterStatusUpdate.AddEndurancepercent(builder, endurancepercent);
    SC_CharacterStatusUpdate.AddManapercent(builder, manapercent);
    SC_CharacterStatusUpdate.AddHealthpercent(builder, healthpercent);
    SC_CharacterStatusUpdate.AddSittingflag(builder, sittingflag);
    return SC_CharacterStatusUpdate.EndSC_CharacterStatusUpdate(builder);
  }

  public static void StartSC_CharacterStatusUpdate(FlatBufferBuilder builder) { builder.StartTable(13); }
  public static void AddSittingflag(FlatBufferBuilder builder, bool sittingflag) { builder.AddBool(0, sittingflag, false); }
  public static void AddHealthpercent(FlatBufferBuilder builder, byte healthpercent) { builder.AddByte(1, healthpercent, 0); }
  public static void AddManapercent(FlatBufferBuilder builder, byte manapercent) { builder.AddByte(2, manapercent, 0); }
  public static void AddEndurancepercent(FlatBufferBuilder builder, byte endurancepercent) { builder.AddByte(3, endurancepercent, 0); }
  public static void AddConpercent(FlatBufferBuilder builder, byte conpercent) { builder.AddByte(4, conpercent, 0); }
  public static void AddMaxmana(FlatBufferBuilder builder, int maxmana) { builder.AddInt(5, maxmana, 0); }
  public static void AddMaxendurance(FlatBufferBuilder builder, int maxendurance) { builder.AddInt(6, maxendurance, 0); }
  public static void AddMaxconcetration(FlatBufferBuilder builder, int maxconcetration) { builder.AddInt(7, maxconcetration, 0); }
  public static void AddMaxhealth(FlatBufferBuilder builder, int maxhealth) { builder.AddInt(8, maxhealth, 0); }
  public static void AddEndurance(FlatBufferBuilder builder, int endurance) { builder.AddInt(9, endurance, 0); }
  public static void AddMana(FlatBufferBuilder builder, int mana) { builder.AddInt(10, mana, 0); }
  public static void AddConcentration(FlatBufferBuilder builder, int concentration) { builder.AddInt(11, concentration, 0); }
  public static void AddHealth(FlatBufferBuilder builder, int health) { builder.AddInt(12, health, 0); }
  public static Offset<NetworkMessage.SC_CharacterStatusUpdate> EndSC_CharacterStatusUpdate(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<NetworkMessage.SC_CharacterStatusUpdate>(o);
  }
  public SC_CharacterStatusUpdate_FBS UnPack() {
    var _o = new SC_CharacterStatusUpdate_FBS();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SC_CharacterStatusUpdate_FBS _o) {
    _o.Sittingflag = this.Sittingflag;
    _o.Healthpercent = this.Healthpercent;
    _o.Manapercent = this.Manapercent;
    _o.Endurancepercent = this.Endurancepercent;
    _o.Conpercent = this.Conpercent;
    _o.Maxmana = this.Maxmana;
    _o.Maxendurance = this.Maxendurance;
    _o.Maxconcetration = this.Maxconcetration;
    _o.Maxhealth = this.Maxhealth;
    _o.Endurance = this.Endurance;
    _o.Mana = this.Mana;
    _o.Concentration = this.Concentration;
    _o.Health = this.Health;
  }
  public static Offset<NetworkMessage.SC_CharacterStatusUpdate> Pack(FlatBufferBuilder builder, SC_CharacterStatusUpdate_FBS _o) {
    if (_o == null) return default(Offset<NetworkMessage.SC_CharacterStatusUpdate>);
    return CreateSC_CharacterStatusUpdate(
      builder,
      _o.Sittingflag,
      _o.Healthpercent,
      _o.Manapercent,
      _o.Endurancepercent,
      _o.Conpercent,
      _o.Maxmana,
      _o.Maxendurance,
      _o.Maxconcetration,
      _o.Maxhealth,
      _o.Endurance,
      _o.Mana,
      _o.Concentration,
      _o.Health);
  }
}

public class SC_CharacterStatusUpdate_FBS
{
  public bool Sittingflag { get; set; }
  public byte Healthpercent { get; set; }
  public byte Manapercent { get; set; }
  public byte Endurancepercent { get; set; }
  public byte Conpercent { get; set; }
  public int Maxmana { get; set; }
  public int Maxendurance { get; set; }
  public int Maxconcetration { get; set; }
  public int Maxhealth { get; set; }
  public int Endurance { get; set; }
  public int Mana { get; set; }
  public int Concentration { get; set; }
  public int Health { get; set; }

  public SC_CharacterStatusUpdate_FBS() {
    this.Sittingflag = false;
    this.Healthpercent = 0;
    this.Manapercent = 0;
    this.Endurancepercent = 0;
    this.Conpercent = 0;
    this.Maxmana = 0;
    this.Maxendurance = 0;
    this.Maxconcetration = 0;
    this.Maxhealth = 0;
    this.Endurance = 0;
    this.Mana = 0;
    this.Concentration = 0;
    this.Health = 0;
  }
}


static public class SC_CharacterStatusUpdateVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Sittingflag*/, 1 /*bool*/, 1, false)
      && verifier.VerifyField(tablePos, 6 /*Healthpercent*/, 1 /*byte*/, 1, false)
      && verifier.VerifyField(tablePos, 8 /*Manapercent*/, 1 /*byte*/, 1, false)
      && verifier.VerifyField(tablePos, 10 /*Endurancepercent*/, 1 /*byte*/, 1, false)
      && verifier.VerifyField(tablePos, 12 /*Conpercent*/, 1 /*byte*/, 1, false)
      && verifier.VerifyField(tablePos, 14 /*Maxmana*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 16 /*Maxendurance*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 18 /*Maxconcetration*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 20 /*Maxhealth*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 22 /*Endurance*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 24 /*Mana*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 26 /*Concentration*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 28 /*Health*/, 4 /*int*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}
public struct SC_ObjectUpdate : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static SC_ObjectUpdate GetRootAsSC_ObjectUpdate(ByteBuffer _bb) { return GetRootAsSC_ObjectUpdate(_bb, new SC_ObjectUpdate()); }
  public static SC_ObjectUpdate GetRootAsSC_ObjectUpdate(ByteBuffer _bb, SC_ObjectUpdate obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SC_ObjectUpdate __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ushort Heading { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public NetworkMessage.Vector3Int? Currentzonepos { get { int o = __p.__offset(6); return o != 0 ? (NetworkMessage.Vector3Int?)(new NetworkMessage.Vector3Int()).__assign(o + __p.bb_pos, __p.bb) : null; } }
  public NetworkMessage.Vector3Int? Targetzonepos { get { int o = __p.__offset(8); return o != 0 ? (NetworkMessage.Vector3Int?)(new NetworkMessage.Vector3Int()).__assign(o + __p.bb_pos, __p.bb) : null; } }
  public ushort Myobjectid { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public ushort Targetobjectid { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public byte Healthpercent { get { int o = __p.__offset(14); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }
  public byte Flags { get { int o = __p.__offset(16); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }
  public byte Zoneskinid { get { int o = __p.__offset(18); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }
  public byte Targetzone { get { int o = __p.__offset(20); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }

  public static Offset<NetworkMessage.SC_ObjectUpdate> CreateSC_ObjectUpdate(FlatBufferBuilder builder,
      ushort heading = 0,
      NetworkMessage.Vector3Int_FBS currentzonepos = null,
      NetworkMessage.Vector3Int_FBS targetzonepos = null,
      ushort myobjectid = 0,
      ushort targetobjectid = 0,
      byte healthpercent = 0,
      byte flags = 0,
      byte zoneskinid = 0,
      byte targetzone = 0) {
    builder.StartTable(9);
    SC_ObjectUpdate.AddTargetzonepos(builder, NetworkMessage.Vector3Int.Pack(builder, targetzonepos));
    SC_ObjectUpdate.AddCurrentzonepos(builder, NetworkMessage.Vector3Int.Pack(builder, currentzonepos));
    SC_ObjectUpdate.AddTargetobjectid(builder, targetobjectid);
    SC_ObjectUpdate.AddMyobjectid(builder, myobjectid);
    SC_ObjectUpdate.AddHeading(builder, heading);
    SC_ObjectUpdate.AddTargetzone(builder, targetzone);
    SC_ObjectUpdate.AddZoneskinid(builder, zoneskinid);
    SC_ObjectUpdate.AddFlags(builder, flags);
    SC_ObjectUpdate.AddHealthpercent(builder, healthpercent);
    return SC_ObjectUpdate.EndSC_ObjectUpdate(builder);
  }

  public static void StartSC_ObjectUpdate(FlatBufferBuilder builder) { builder.StartTable(9); }
  public static void AddHeading(FlatBufferBuilder builder, ushort heading) { builder.AddUshort(0, heading, 0); }
  public static void AddCurrentzonepos(FlatBufferBuilder builder, Offset<NetworkMessage.Vector3Int> currentzoneposOffset) { builder.AddStruct(1, currentzoneposOffset.Value, 0); }
  public static void AddTargetzonepos(FlatBufferBuilder builder, Offset<NetworkMessage.Vector3Int> targetzoneposOffset) { builder.AddStruct(2, targetzoneposOffset.Value, 0); }
  public static void AddMyobjectid(FlatBufferBuilder builder, ushort myobjectid) { builder.AddUshort(3, myobjectid, 0); }
  public static void AddTargetobjectid(FlatBufferBuilder builder, ushort targetobjectid) { builder.AddUshort(4, targetobjectid, 0); }
  public static void AddHealthpercent(FlatBufferBuilder builder, byte healthpercent) { builder.AddByte(5, healthpercent, 0); }
  public static void AddFlags(FlatBufferBuilder builder, byte flags) { builder.AddByte(6, flags, 0); }
  public static void AddZoneskinid(FlatBufferBuilder builder, byte zoneskinid) { builder.AddByte(7, zoneskinid, 0); }
  public static void AddTargetzone(FlatBufferBuilder builder, byte targetzone) { builder.AddByte(8, targetzone, 0); }
  public static Offset<NetworkMessage.SC_ObjectUpdate> EndSC_ObjectUpdate(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<NetworkMessage.SC_ObjectUpdate>(o);
  }
  public SC_ObjectUpdate_FBS UnPack() {
    var _o = new SC_ObjectUpdate_FBS();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SC_ObjectUpdate_FBS _o) {
    _o.Heading = this.Heading;
    _o.Currentzonepos = this.Currentzonepos.HasValue ? this.Currentzonepos.Value.UnPack() : null;
    _o.Targetzonepos = this.Targetzonepos.HasValue ? this.Targetzonepos.Value.UnPack() : null;
    _o.Myobjectid = this.Myobjectid;
    _o.Targetobjectid = this.Targetobjectid;
    _o.Healthpercent = this.Healthpercent;
    _o.Flags = this.Flags;
    _o.Zoneskinid = this.Zoneskinid;
    _o.Targetzone = this.Targetzone;
  }
  public static Offset<NetworkMessage.SC_ObjectUpdate> Pack(FlatBufferBuilder builder, SC_ObjectUpdate_FBS _o) {
    if (_o == null) return default(Offset<NetworkMessage.SC_ObjectUpdate>);
    return CreateSC_ObjectUpdate(
      builder,
      _o.Heading,
      _o.Currentzonepos,
      _o.Targetzonepos,
      _o.Myobjectid,
      _o.Targetobjectid,
      _o.Healthpercent,
      _o.Flags,
      _o.Zoneskinid,
      _o.Targetzone);
  }
}

public class SC_ObjectUpdate_FBS
{
  public ushort Heading { get; set; }
  public NetworkMessage.Vector3Int_FBS Currentzonepos { get; set; }
  public NetworkMessage.Vector3Int_FBS Targetzonepos { get; set; }
  public ushort Myobjectid { get; set; }
  public ushort Targetobjectid { get; set; }
  public byte Healthpercent { get; set; }
  public byte Flags { get; set; }
  public byte Zoneskinid { get; set; }
  public byte Targetzone { get; set; }

  public SC_ObjectUpdate_FBS() {
    this.Heading = 0;
    this.Currentzonepos = new NetworkMessage.Vector3Int_FBS();
    this.Targetzonepos = new NetworkMessage.Vector3Int_FBS();
    this.Myobjectid = 0;
    this.Targetobjectid = 0;
    this.Healthpercent = 0;
    this.Flags = 0;
    this.Zoneskinid = 0;
    this.Targetzone = 0;
  }
}


static public class SC_ObjectUpdateVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Heading*/, 2 /*ushort*/, 2, false)
      && verifier.VerifyField(tablePos, 6 /*Currentzonepos*/, 12 /*NetworkMessage.Vector3Int*/, 4, false)
      && verifier.VerifyField(tablePos, 8 /*Targetzonepos*/, 12 /*NetworkMessage.Vector3Int*/, 4, false)
      && verifier.VerifyField(tablePos, 10 /*Myobjectid*/, 2 /*ushort*/, 2, false)
      && verifier.VerifyField(tablePos, 12 /*Targetobjectid*/, 2 /*ushort*/, 2, false)
      && verifier.VerifyField(tablePos, 14 /*Healthpercent*/, 1 /*byte*/, 1, false)
      && verifier.VerifyField(tablePos, 16 /*Flags*/, 1 /*byte*/, 1, false)
      && verifier.VerifyField(tablePos, 18 /*Zoneskinid*/, 1 /*byte*/, 1, false)
      && verifier.VerifyField(tablePos, 20 /*Targetzone*/, 1 /*byte*/, 1, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}
public struct SC_CombatAnimation : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static SC_CombatAnimation GetRootAsSC_CombatAnimation(ByteBuffer _bb) { return GetRootAsSC_CombatAnimation(_bb, new SC_CombatAnimation()); }
  public static SC_CombatAnimation GetRootAsSC_CombatAnimation(ByteBuffer _bb, SC_CombatAnimation obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SC_CombatAnimation __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ushort Attackobjectid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public ushort Defenderobjectid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public ushort Weaponid { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public ushort Shieldid { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public ushort Style { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public byte Stance { get { int o = __p.__offset(14); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }
  public byte Result { get { int o = __p.__offset(16); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }
  public byte Healthpercent { get { int o = __p.__offset(18); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }

  public static Offset<NetworkMessage.SC_CombatAnimation> CreateSC_CombatAnimation(FlatBufferBuilder builder,
      ushort attackobjectid = 0,
      ushort defenderobjectid = 0,
      ushort weaponid = 0,
      ushort shieldid = 0,
      ushort style = 0,
      byte stance = 0,
      byte result = 0,
      byte healthpercent = 0) {
    builder.StartTable(8);
    SC_CombatAnimation.AddStyle(builder, style);
    SC_CombatAnimation.AddShieldid(builder, shieldid);
    SC_CombatAnimation.AddWeaponid(builder, weaponid);
    SC_CombatAnimation.AddDefenderobjectid(builder, defenderobjectid);
    SC_CombatAnimation.AddAttackobjectid(builder, attackobjectid);
    SC_CombatAnimation.AddHealthpercent(builder, healthpercent);
    SC_CombatAnimation.AddResult(builder, result);
    SC_CombatAnimation.AddStance(builder, stance);
    return SC_CombatAnimation.EndSC_CombatAnimation(builder);
  }

  public static void StartSC_CombatAnimation(FlatBufferBuilder builder) { builder.StartTable(8); }
  public static void AddAttackobjectid(FlatBufferBuilder builder, ushort attackobjectid) { builder.AddUshort(0, attackobjectid, 0); }
  public static void AddDefenderobjectid(FlatBufferBuilder builder, ushort defenderobjectid) { builder.AddUshort(1, defenderobjectid, 0); }
  public static void AddWeaponid(FlatBufferBuilder builder, ushort weaponid) { builder.AddUshort(2, weaponid, 0); }
  public static void AddShieldid(FlatBufferBuilder builder, ushort shieldid) { builder.AddUshort(3, shieldid, 0); }
  public static void AddStyle(FlatBufferBuilder builder, ushort style) { builder.AddUshort(4, style, 0); }
  public static void AddStance(FlatBufferBuilder builder, byte stance) { builder.AddByte(5, stance, 0); }
  public static void AddResult(FlatBufferBuilder builder, byte result) { builder.AddByte(6, result, 0); }
  public static void AddHealthpercent(FlatBufferBuilder builder, byte healthpercent) { builder.AddByte(7, healthpercent, 0); }
  public static Offset<NetworkMessage.SC_CombatAnimation> EndSC_CombatAnimation(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<NetworkMessage.SC_CombatAnimation>(o);
  }
  public SC_CombatAnimation_FBS UnPack() {
    var _o = new SC_CombatAnimation_FBS();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SC_CombatAnimation_FBS _o) {
    _o.Attackobjectid = this.Attackobjectid;
    _o.Defenderobjectid = this.Defenderobjectid;
    _o.Weaponid = this.Weaponid;
    _o.Shieldid = this.Shieldid;
    _o.Style = this.Style;
    _o.Stance = this.Stance;
    _o.Result = this.Result;
    _o.Healthpercent = this.Healthpercent;
  }
  public static Offset<NetworkMessage.SC_CombatAnimation> Pack(FlatBufferBuilder builder, SC_CombatAnimation_FBS _o) {
    if (_o == null) return default(Offset<NetworkMessage.SC_CombatAnimation>);
    return CreateSC_CombatAnimation(
      builder,
      _o.Attackobjectid,
      _o.Defenderobjectid,
      _o.Weaponid,
      _o.Shieldid,
      _o.Style,
      _o.Stance,
      _o.Result,
      _o.Healthpercent);
  }
}

public class SC_CombatAnimation_FBS
{
  public ushort Attackobjectid { get; set; }
  public ushort Defenderobjectid { get; set; }
  public ushort Weaponid { get; set; }
  public ushort Shieldid { get; set; }
  public ushort Style { get; set; }
  public byte Stance { get; set; }
  public byte Result { get; set; }
  public byte Healthpercent { get; set; }

  public SC_CombatAnimation_FBS() {
    this.Attackobjectid = 0;
    this.Defenderobjectid = 0;
    this.Weaponid = 0;
    this.Shieldid = 0;
    this.Style = 0;
    this.Stance = 0;
    this.Result = 0;
    this.Healthpercent = 0;
  }
}


static public class SC_CombatAnimationVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Attackobjectid*/, 2 /*ushort*/, 2, false)
      && verifier.VerifyField(tablePos, 6 /*Defenderobjectid*/, 2 /*ushort*/, 2, false)
      && verifier.VerifyField(tablePos, 8 /*Weaponid*/, 2 /*ushort*/, 2, false)
      && verifier.VerifyField(tablePos, 10 /*Shieldid*/, 2 /*ushort*/, 2, false)
      && verifier.VerifyField(tablePos, 12 /*Style*/, 2 /*ushort*/, 2, false)
      && verifier.VerifyField(tablePos, 14 /*Stance*/, 1 /*byte*/, 1, false)
      && verifier.VerifyField(tablePos, 16 /*Result*/, 1 /*byte*/, 1, false)
      && verifier.VerifyField(tablePos, 18 /*Healthpercent*/, 1 /*byte*/, 1, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}
public struct SC_SpellCastAnimation : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static SC_SpellCastAnimation GetRootAsSC_SpellCastAnimation(ByteBuffer _bb) { return GetRootAsSC_SpellCastAnimation(_bb, new SC_SpellCastAnimation()); }
  public static SC_SpellCastAnimation GetRootAsSC_SpellCastAnimation(ByteBuffer _bb, SC_SpellCastAnimation obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SC_SpellCastAnimation __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ushort Objectid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public ushort Spellid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public ushort Castingtime { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }

  public static Offset<NetworkMessage.SC_SpellCastAnimation> CreateSC_SpellCastAnimation(FlatBufferBuilder builder,
      ushort objectid = 0,
      ushort spellid = 0,
      ushort castingtime = 0) {
    builder.StartTable(3);
    SC_SpellCastAnimation.AddCastingtime(builder, castingtime);
    SC_SpellCastAnimation.AddSpellid(builder, spellid);
    SC_SpellCastAnimation.AddObjectid(builder, objectid);
    return SC_SpellCastAnimation.EndSC_SpellCastAnimation(builder);
  }

  public static void StartSC_SpellCastAnimation(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddObjectid(FlatBufferBuilder builder, ushort objectid) { builder.AddUshort(0, objectid, 0); }
  public static void AddSpellid(FlatBufferBuilder builder, ushort spellid) { builder.AddUshort(1, spellid, 0); }
  public static void AddCastingtime(FlatBufferBuilder builder, ushort castingtime) { builder.AddUshort(2, castingtime, 0); }
  public static Offset<NetworkMessage.SC_SpellCastAnimation> EndSC_SpellCastAnimation(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<NetworkMessage.SC_SpellCastAnimation>(o);
  }
  public SC_SpellCastAnimation_FBS UnPack() {
    var _o = new SC_SpellCastAnimation_FBS();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SC_SpellCastAnimation_FBS _o) {
    _o.Objectid = this.Objectid;
    _o.Spellid = this.Spellid;
    _o.Castingtime = this.Castingtime;
  }
  public static Offset<NetworkMessage.SC_SpellCastAnimation> Pack(FlatBufferBuilder builder, SC_SpellCastAnimation_FBS _o) {
    if (_o == null) return default(Offset<NetworkMessage.SC_SpellCastAnimation>);
    return CreateSC_SpellCastAnimation(
      builder,
      _o.Objectid,
      _o.Spellid,
      _o.Castingtime);
  }
}

public class SC_SpellCastAnimation_FBS
{
  public ushort Objectid { get; set; }
  public ushort Spellid { get; set; }
  public ushort Castingtime { get; set; }

  public SC_SpellCastAnimation_FBS() {
    this.Objectid = 0;
    this.Spellid = 0;
    this.Castingtime = 0;
  }
}


static public class SC_SpellCastAnimationVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Objectid*/, 2 /*ushort*/, 2, false)
      && verifier.VerifyField(tablePos, 6 /*Spellid*/, 2 /*ushort*/, 2, false)
      && verifier.VerifyField(tablePos, 8 /*Castingtime*/, 2 /*ushort*/, 2, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}
public struct SC_SpellEffectAnimation : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static SC_SpellEffectAnimation GetRootAsSC_SpellEffectAnimation(ByteBuffer _bb) { return GetRootAsSC_SpellEffectAnimation(_bb, new SC_SpellEffectAnimation()); }
  public static SC_SpellEffectAnimation GetRootAsSC_SpellEffectAnimation(ByteBuffer _bb, SC_SpellEffectAnimation obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SC_SpellEffectAnimation __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ushort Casterobjectid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public ushort Spellid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public ushort Spelltarget { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public ushort Bolttime { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public bool Nosound { get { int o = __p.__offset(12); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public bool Success { get { int o = __p.__offset(14); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }

  public static Offset<NetworkMessage.SC_SpellEffectAnimation> CreateSC_SpellEffectAnimation(FlatBufferBuilder builder,
      ushort casterobjectid = 0,
      ushort spellid = 0,
      ushort spelltarget = 0,
      ushort bolttime = 0,
      bool nosound = false,
      bool success = false) {
    builder.StartTable(6);
    SC_SpellEffectAnimation.AddBolttime(builder, bolttime);
    SC_SpellEffectAnimation.AddSpelltarget(builder, spelltarget);
    SC_SpellEffectAnimation.AddSpellid(builder, spellid);
    SC_SpellEffectAnimation.AddCasterobjectid(builder, casterobjectid);
    SC_SpellEffectAnimation.AddSuccess(builder, success);
    SC_SpellEffectAnimation.AddNosound(builder, nosound);
    return SC_SpellEffectAnimation.EndSC_SpellEffectAnimation(builder);
  }

  public static void StartSC_SpellEffectAnimation(FlatBufferBuilder builder) { builder.StartTable(6); }
  public static void AddCasterobjectid(FlatBufferBuilder builder, ushort casterobjectid) { builder.AddUshort(0, casterobjectid, 0); }
  public static void AddSpellid(FlatBufferBuilder builder, ushort spellid) { builder.AddUshort(1, spellid, 0); }
  public static void AddSpelltarget(FlatBufferBuilder builder, ushort spelltarget) { builder.AddUshort(2, spelltarget, 0); }
  public static void AddBolttime(FlatBufferBuilder builder, ushort bolttime) { builder.AddUshort(3, bolttime, 0); }
  public static void AddNosound(FlatBufferBuilder builder, bool nosound) { builder.AddBool(4, nosound, false); }
  public static void AddSuccess(FlatBufferBuilder builder, bool success) { builder.AddBool(5, success, false); }
  public static Offset<NetworkMessage.SC_SpellEffectAnimation> EndSC_SpellEffectAnimation(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<NetworkMessage.SC_SpellEffectAnimation>(o);
  }
  public SC_SpellEffectAnimation_FBS UnPack() {
    var _o = new SC_SpellEffectAnimation_FBS();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SC_SpellEffectAnimation_FBS _o) {
    _o.Casterobjectid = this.Casterobjectid;
    _o.Spellid = this.Spellid;
    _o.Spelltarget = this.Spelltarget;
    _o.Bolttime = this.Bolttime;
    _o.Nosound = this.Nosound;
    _o.Success = this.Success;
  }
  public static Offset<NetworkMessage.SC_SpellEffectAnimation> Pack(FlatBufferBuilder builder, SC_SpellEffectAnimation_FBS _o) {
    if (_o == null) return default(Offset<NetworkMessage.SC_SpellEffectAnimation>);
    return CreateSC_SpellEffectAnimation(
      builder,
      _o.Casterobjectid,
      _o.Spellid,
      _o.Spelltarget,
      _o.Bolttime,
      _o.Nosound,
      _o.Success);
  }
}

public class SC_SpellEffectAnimation_FBS
{
  public ushort Casterobjectid { get; set; }
  public ushort Spellid { get; set; }
  public ushort Spelltarget { get; set; }
  public ushort Bolttime { get; set; }
  public bool Nosound { get; set; }
  public bool Success { get; set; }

  public SC_SpellEffectAnimation_FBS() {
    this.Casterobjectid = 0;
    this.Spellid = 0;
    this.Spelltarget = 0;
    this.Bolttime = 0;
    this.Nosound = false;
    this.Success = false;
  }
}


static public class SC_SpellEffectAnimationVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Casterobjectid*/, 2 /*ushort*/, 2, false)
      && verifier.VerifyField(tablePos, 6 /*Spellid*/, 2 /*ushort*/, 2, false)
      && verifier.VerifyField(tablePos, 8 /*Spelltarget*/, 2 /*ushort*/, 2, false)
      && verifier.VerifyField(tablePos, 10 /*Bolttime*/, 2 /*ushort*/, 2, false)
      && verifier.VerifyField(tablePos, 12 /*Nosound*/, 1 /*bool*/, 1, false)
      && verifier.VerifyField(tablePos, 14 /*Success*/, 1 /*bool*/, 1, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}
public struct SC_EmoteAnimation : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static SC_EmoteAnimation GetRootAsSC_EmoteAnimation(ByteBuffer _bb) { return GetRootAsSC_EmoteAnimation(_bb, new SC_EmoteAnimation()); }
  public static SC_EmoteAnimation GetRootAsSC_EmoteAnimation(ByteBuffer _bb, SC_EmoteAnimation obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SC_EmoteAnimation __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ushort Objectid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public byte Emote { get { int o = __p.__offset(6); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }

  public static Offset<NetworkMessage.SC_EmoteAnimation> CreateSC_EmoteAnimation(FlatBufferBuilder builder,
      ushort objectid = 0,
      byte emote = 0) {
    builder.StartTable(2);
    SC_EmoteAnimation.AddObjectid(builder, objectid);
    SC_EmoteAnimation.AddEmote(builder, emote);
    return SC_EmoteAnimation.EndSC_EmoteAnimation(builder);
  }

  public static void StartSC_EmoteAnimation(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddObjectid(FlatBufferBuilder builder, ushort objectid) { builder.AddUshort(0, objectid, 0); }
  public static void AddEmote(FlatBufferBuilder builder, byte emote) { builder.AddByte(1, emote, 0); }
  public static Offset<NetworkMessage.SC_EmoteAnimation> EndSC_EmoteAnimation(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<NetworkMessage.SC_EmoteAnimation>(o);
  }
  public SC_EmoteAnimation_FBS UnPack() {
    var _o = new SC_EmoteAnimation_FBS();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SC_EmoteAnimation_FBS _o) {
    _o.Objectid = this.Objectid;
    _o.Emote = this.Emote;
  }
  public static Offset<NetworkMessage.SC_EmoteAnimation> Pack(FlatBufferBuilder builder, SC_EmoteAnimation_FBS _o) {
    if (_o == null) return default(Offset<NetworkMessage.SC_EmoteAnimation>);
    return CreateSC_EmoteAnimation(
      builder,
      _o.Objectid,
      _o.Emote);
  }
}

public class SC_EmoteAnimation_FBS
{
  public ushort Objectid { get; set; }
  public byte Emote { get; set; }

  public SC_EmoteAnimation_FBS() {
    this.Objectid = 0;
    this.Emote = 0;
  }
}


static public class SC_EmoteAnimationVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Objectid*/, 2 /*ushort*/, 2, false)
      && verifier.VerifyField(tablePos, 6 /*Emote*/, 1 /*byte*/, 1, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}
public struct SC_ConcentrationList : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static SC_ConcentrationList GetRootAsSC_ConcentrationList(ByteBuffer _bb) { return GetRootAsSC_ConcentrationList(_bb, new SC_ConcentrationList()); }
  public static SC_ConcentrationList GetRootAsSC_ConcentrationList(ByteBuffer _bb, SC_ConcentrationList obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SC_ConcentrationList __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public NetworkMessage.ConEffectData? Coninfo(int j) { int o = __p.__offset(4); return o != 0 ? (NetworkMessage.ConEffectData?)(new NetworkMessage.ConEffectData()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ConinfoLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<NetworkMessage.SC_ConcentrationList> CreateSC_ConcentrationList(FlatBufferBuilder builder,
      VectorOffset coninfoOffset = default(VectorOffset)) {
    builder.StartTable(1);
    SC_ConcentrationList.AddConinfo(builder, coninfoOffset);
    return SC_ConcentrationList.EndSC_ConcentrationList(builder);
  }

  public static void StartSC_ConcentrationList(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddConinfo(FlatBufferBuilder builder, VectorOffset coninfoOffset) { builder.AddOffset(0, coninfoOffset.Value, 0); }
  public static VectorOffset CreateConinfoVector(FlatBufferBuilder builder, Offset<NetworkMessage.ConEffectData>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateConinfoVectorBlock(FlatBufferBuilder builder, Offset<NetworkMessage.ConEffectData>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateConinfoVectorBlock(FlatBufferBuilder builder, ArraySegment<Offset<NetworkMessage.ConEffectData>> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateConinfoVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<Offset<NetworkMessage.ConEffectData>>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartConinfoVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<NetworkMessage.SC_ConcentrationList> EndSC_ConcentrationList(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<NetworkMessage.SC_ConcentrationList>(o);
  }
  public SC_ConcentrationList_FBS UnPack() {
    var _o = new SC_ConcentrationList_FBS();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SC_ConcentrationList_FBS _o) {
    _o.Coninfo = new List<NetworkMessage.ConEffectData_FBS>();
    for (var _j = 0; _j < this.ConinfoLength; ++_j) {_o.Coninfo.Add(this.Coninfo(_j).HasValue ? this.Coninfo(_j).Value.UnPack() : null);}
  }
  public static Offset<NetworkMessage.SC_ConcentrationList> Pack(FlatBufferBuilder builder, SC_ConcentrationList_FBS _o) {
    if (_o == null) return default(Offset<NetworkMessage.SC_ConcentrationList>);
    var _coninfo = default(VectorOffset);
    if (_o.Coninfo != null) {
      var __coninfo = new Offset<NetworkMessage.ConEffectData>[_o.Coninfo.Count];
      for (var _j = 0; _j < __coninfo.Length; ++_j) { __coninfo[_j] = NetworkMessage.ConEffectData.Pack(builder, _o.Coninfo[_j]); }
      _coninfo = CreateConinfoVector(builder, __coninfo);
    }
    return CreateSC_ConcentrationList(
      builder,
      _coninfo);
  }
}

public class SC_ConcentrationList_FBS
{
  public List<NetworkMessage.ConEffectData_FBS> Coninfo { get; set; }

  public SC_ConcentrationList_FBS() {
    this.Coninfo = null;
  }
}


static public class SC_ConcentrationListVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyVectorOfTables(tablePos, 4 /*Coninfo*/, NetworkMessage.ConEffectDataVerify.Verify, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}
public struct SC_StringMessage : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static SC_StringMessage GetRootAsSC_StringMessage(ByteBuffer _bb) { return GetRootAsSC_StringMessage(_bb, new SC_StringMessage()); }
  public static SC_StringMessage GetRootAsSC_StringMessage(ByteBuffer _bb, SC_StringMessage obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SC_StringMessage __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Seesionid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public NetworkMessage.eChatType Chattype { get { int o = __p.__offset(6); return o != 0 ? (NetworkMessage.eChatType)__p.bb.Get(o + __p.bb_pos) : NetworkMessage.eChatType.CT_System; } }
  public NetworkMessage.eChatLoc Chatloc { get { int o = __p.__offset(8); return o != 0 ? (NetworkMessage.eChatLoc)__p.bb.Get(o + __p.bb_pos) : NetworkMessage.eChatLoc.CL_ChatWindow; } }
  public string Message { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetMessageBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetMessageBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetMessageArray() { return __p.__vector_as_array<byte>(10); }

  public static Offset<NetworkMessage.SC_StringMessage> CreateSC_StringMessage(FlatBufferBuilder builder,
      int seesionid = 0,
      NetworkMessage.eChatType chattype = NetworkMessage.eChatType.CT_System,
      NetworkMessage.eChatLoc chatloc = NetworkMessage.eChatLoc.CL_ChatWindow,
      StringOffset messageOffset = default(StringOffset)) {
    builder.StartTable(4);
    SC_StringMessage.AddMessage(builder, messageOffset);
    SC_StringMessage.AddSeesionid(builder, seesionid);
    SC_StringMessage.AddChatloc(builder, chatloc);
    SC_StringMessage.AddChattype(builder, chattype);
    return SC_StringMessage.EndSC_StringMessage(builder);
  }

  public static void StartSC_StringMessage(FlatBufferBuilder builder) { builder.StartTable(4); }
  public static void AddSeesionid(FlatBufferBuilder builder, int seesionid) { builder.AddInt(0, seesionid, 0); }
  public static void AddChattype(FlatBufferBuilder builder, NetworkMessage.eChatType chattype) { builder.AddByte(1, (byte)chattype, 0); }
  public static void AddChatloc(FlatBufferBuilder builder, NetworkMessage.eChatLoc chatloc) { builder.AddByte(2, (byte)chatloc, 0); }
  public static void AddMessage(FlatBufferBuilder builder, StringOffset messageOffset) { builder.AddOffset(3, messageOffset.Value, 0); }
  public static Offset<NetworkMessage.SC_StringMessage> EndSC_StringMessage(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<NetworkMessage.SC_StringMessage>(o);
  }
  public SC_StringMessage_FBS UnPack() {
    var _o = new SC_StringMessage_FBS();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SC_StringMessage_FBS _o) {
    _o.Seesionid = this.Seesionid;
    _o.Chattype = this.Chattype;
    _o.Chatloc = this.Chatloc;
    _o.Message = this.Message;
  }
  public static Offset<NetworkMessage.SC_StringMessage> Pack(FlatBufferBuilder builder, SC_StringMessage_FBS _o) {
    if (_o == null) return default(Offset<NetworkMessage.SC_StringMessage>);
    var _message = _o.Message == null ? default(StringOffset) : builder.CreateString(_o.Message);
    return CreateSC_StringMessage(
      builder,
      _o.Seesionid,
      _o.Chattype,
      _o.Chatloc,
      _message);
  }
}

public class SC_StringMessage_FBS
{
  public int Seesionid { get; set; }
  public NetworkMessage.eChatType Chattype { get; set; }
  public NetworkMessage.eChatLoc Chatloc { get; set; }
  public string Message { get; set; }

  public SC_StringMessage_FBS() {
    this.Seesionid = 0;
    this.Chattype = NetworkMessage.eChatType.CT_System;
    this.Chatloc = NetworkMessage.eChatLoc.CL_ChatWindow;
    this.Message = null;
  }
}


static public class SC_StringMessageVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Seesionid*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*Chattype*/, 1 /*NetworkMessage.eChatType*/, 1, false)
      && verifier.VerifyField(tablePos, 8 /*Chatloc*/, 1 /*NetworkMessage.eChatLoc*/, 1, false)
      && verifier.VerifyString(tablePos, 10 /*Message*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}
public struct SC_DialogBoxMessage : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static SC_DialogBoxMessage GetRootAsSC_DialogBoxMessage(ByteBuffer _bb) { return GetRootAsSC_DialogBoxMessage(_bb, new SC_DialogBoxMessage()); }
  public static SC_DialogBoxMessage GetRootAsSC_DialogBoxMessage(ByteBuffer _bb, SC_DialogBoxMessage obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SC_DialogBoxMessage __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public NetworkMessage.eDialogCode Code { get { int o = __p.__offset(4); return o != 0 ? (NetworkMessage.eDialogCode)__p.bb.Get(o + __p.bb_pos) : NetworkMessage.eDialogCode.SimpleWarning; } }
  public NetworkMessage.eDialogType Type { get { int o = __p.__offset(6); return o != 0 ? (NetworkMessage.eDialogType)__p.bb.Get(o + __p.bb_pos) : NetworkMessage.eDialogType.Ok; } }
  public bool Autowraptext { get { int o = __p.__offset(8); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public ushort Data1 { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public ushort Data2 { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public ushort Data3 { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public ushort Data4 { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public string Message { get { int o = __p.__offset(18); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetMessageBytes() { return __p.__vector_as_span<byte>(18, 1); }
#else
  public ArraySegment<byte>? GetMessageBytes() { return __p.__vector_as_arraysegment(18); }
#endif
  public byte[] GetMessageArray() { return __p.__vector_as_array<byte>(18); }

  public static Offset<NetworkMessage.SC_DialogBoxMessage> CreateSC_DialogBoxMessage(FlatBufferBuilder builder,
      NetworkMessage.eDialogCode code = NetworkMessage.eDialogCode.SimpleWarning,
      NetworkMessage.eDialogType type = NetworkMessage.eDialogType.Ok,
      bool autowraptext = false,
      ushort data1 = 0,
      ushort data2 = 0,
      ushort data3 = 0,
      ushort data4 = 0,
      StringOffset messageOffset = default(StringOffset)) {
    builder.StartTable(8);
    SC_DialogBoxMessage.AddMessage(builder, messageOffset);
    SC_DialogBoxMessage.AddData4(builder, data4);
    SC_DialogBoxMessage.AddData3(builder, data3);
    SC_DialogBoxMessage.AddData2(builder, data2);
    SC_DialogBoxMessage.AddData1(builder, data1);
    SC_DialogBoxMessage.AddAutowraptext(builder, autowraptext);
    SC_DialogBoxMessage.AddType(builder, type);
    SC_DialogBoxMessage.AddCode(builder, code);
    return SC_DialogBoxMessage.EndSC_DialogBoxMessage(builder);
  }

  public static void StartSC_DialogBoxMessage(FlatBufferBuilder builder) { builder.StartTable(8); }
  public static void AddCode(FlatBufferBuilder builder, NetworkMessage.eDialogCode code) { builder.AddByte(0, (byte)code, 0); }
  public static void AddType(FlatBufferBuilder builder, NetworkMessage.eDialogType type) { builder.AddByte(1, (byte)type, 0); }
  public static void AddAutowraptext(FlatBufferBuilder builder, bool autowraptext) { builder.AddBool(2, autowraptext, false); }
  public static void AddData1(FlatBufferBuilder builder, ushort data1) { builder.AddUshort(3, data1, 0); }
  public static void AddData2(FlatBufferBuilder builder, ushort data2) { builder.AddUshort(4, data2, 0); }
  public static void AddData3(FlatBufferBuilder builder, ushort data3) { builder.AddUshort(5, data3, 0); }
  public static void AddData4(FlatBufferBuilder builder, ushort data4) { builder.AddUshort(6, data4, 0); }
  public static void AddMessage(FlatBufferBuilder builder, StringOffset messageOffset) { builder.AddOffset(7, messageOffset.Value, 0); }
  public static Offset<NetworkMessage.SC_DialogBoxMessage> EndSC_DialogBoxMessage(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<NetworkMessage.SC_DialogBoxMessage>(o);
  }
  public SC_DialogBoxMessage_FBS UnPack() {
    var _o = new SC_DialogBoxMessage_FBS();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SC_DialogBoxMessage_FBS _o) {
    _o.Code = this.Code;
    _o.Type = this.Type;
    _o.Autowraptext = this.Autowraptext;
    _o.Data1 = this.Data1;
    _o.Data2 = this.Data2;
    _o.Data3 = this.Data3;
    _o.Data4 = this.Data4;
    _o.Message = this.Message;
  }
  public static Offset<NetworkMessage.SC_DialogBoxMessage> Pack(FlatBufferBuilder builder, SC_DialogBoxMessage_FBS _o) {
    if (_o == null) return default(Offset<NetworkMessage.SC_DialogBoxMessage>);
    var _message = _o.Message == null ? default(StringOffset) : builder.CreateString(_o.Message);
    return CreateSC_DialogBoxMessage(
      builder,
      _o.Code,
      _o.Type,
      _o.Autowraptext,
      _o.Data1,
      _o.Data2,
      _o.Data3,
      _o.Data4,
      _message);
  }
}

public class SC_DialogBoxMessage_FBS
{
  public NetworkMessage.eDialogCode Code { get; set; }
  public NetworkMessage.eDialogType Type { get; set; }
  public bool Autowraptext { get; set; }
  public ushort Data1 { get; set; }
  public ushort Data2 { get; set; }
  public ushort Data3 { get; set; }
  public ushort Data4 { get; set; }
  public string Message { get; set; }

  public SC_DialogBoxMessage_FBS() {
    this.Code = NetworkMessage.eDialogCode.SimpleWarning;
    this.Type = NetworkMessage.eDialogType.Ok;
    this.Autowraptext = false;
    this.Data1 = 0;
    this.Data2 = 0;
    this.Data3 = 0;
    this.Data4 = 0;
    this.Message = null;
  }
}


static public class SC_DialogBoxMessageVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Code*/, 1 /*NetworkMessage.eDialogCode*/, 1, false)
      && verifier.VerifyField(tablePos, 6 /*Type*/, 1 /*NetworkMessage.eDialogType*/, 1, false)
      && verifier.VerifyField(tablePos, 8 /*Autowraptext*/, 1 /*bool*/, 1, false)
      && verifier.VerifyField(tablePos, 10 /*Data1*/, 2 /*ushort*/, 2, false)
      && verifier.VerifyField(tablePos, 12 /*Data2*/, 2 /*ushort*/, 2, false)
      && verifier.VerifyField(tablePos, 14 /*Data3*/, 2 /*ushort*/, 2, false)
      && verifier.VerifyField(tablePos, 16 /*Data4*/, 2 /*ushort*/, 2, false)
      && verifier.VerifyString(tablePos, 18 /*Message*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}
public struct SC_CheckLOSRequest : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static SC_CheckLOSRequest GetRootAsSC_CheckLOSRequest(ByteBuffer _bb) { return GetRootAsSC_CheckLOSRequest(_bb, new SC_CheckLOSRequest()); }
  public static SC_CheckLOSRequest GetRootAsSC_CheckLOSRequest(ByteBuffer _bb, SC_CheckLOSRequest obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SC_CheckLOSRequest __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ushort Sourceid { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public ushort Targetid { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }

  public static Offset<NetworkMessage.SC_CheckLOSRequest> CreateSC_CheckLOSRequest(FlatBufferBuilder builder,
      ushort sourceid = 0,
      ushort targetid = 0) {
    builder.StartTable(2);
    SC_CheckLOSRequest.AddTargetid(builder, targetid);
    SC_CheckLOSRequest.AddSourceid(builder, sourceid);
    return SC_CheckLOSRequest.EndSC_CheckLOSRequest(builder);
  }

  public static void StartSC_CheckLOSRequest(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddSourceid(FlatBufferBuilder builder, ushort sourceid) { builder.AddUshort(0, sourceid, 0); }
  public static void AddTargetid(FlatBufferBuilder builder, ushort targetid) { builder.AddUshort(1, targetid, 0); }
  public static Offset<NetworkMessage.SC_CheckLOSRequest> EndSC_CheckLOSRequest(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<NetworkMessage.SC_CheckLOSRequest>(o);
  }
  public SC_CheckLOSRequest_FBS UnPack() {
    var _o = new SC_CheckLOSRequest_FBS();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SC_CheckLOSRequest_FBS _o) {
    _o.Sourceid = this.Sourceid;
    _o.Targetid = this.Targetid;
  }
  public static Offset<NetworkMessage.SC_CheckLOSRequest> Pack(FlatBufferBuilder builder, SC_CheckLOSRequest_FBS _o) {
    if (_o == null) return default(Offset<NetworkMessage.SC_CheckLOSRequest>);
    return CreateSC_CheckLOSRequest(
      builder,
      _o.Sourceid,
      _o.Targetid);
  }
}

public class SC_CheckLOSRequest_FBS
{
  public ushort Sourceid { get; set; }
  public ushort Targetid { get; set; }

  public SC_CheckLOSRequest_FBS() {
    this.Sourceid = 0;
    this.Targetid = 0;
  }
}


static public class SC_CheckLOSRequestVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Sourceid*/, 2 /*ushort*/, 2, false)
      && verifier.VerifyField(tablePos, 6 /*Targetid*/, 2 /*ushort*/, 2, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}
public struct SC_MaxSpeed : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static SC_MaxSpeed GetRootAsSC_MaxSpeed(ByteBuffer _bb) { return GetRootAsSC_MaxSpeed(_bb, new SC_MaxSpeed()); }
  public static SC_MaxSpeed GetRootAsSC_MaxSpeed(ByteBuffer _bb, SC_MaxSpeed obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SC_MaxSpeed __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ushort Speed { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public bool Turningdisabled { get { int o = __p.__offset(6); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public byte Waterspeed { get { int o = __p.__offset(8); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }

  public static Offset<NetworkMessage.SC_MaxSpeed> CreateSC_MaxSpeed(FlatBufferBuilder builder,
      ushort speed = 0,
      bool turningdisabled = false,
      byte waterspeed = 0) {
    builder.StartTable(3);
    SC_MaxSpeed.AddSpeed(builder, speed);
    SC_MaxSpeed.AddWaterspeed(builder, waterspeed);
    SC_MaxSpeed.AddTurningdisabled(builder, turningdisabled);
    return SC_MaxSpeed.EndSC_MaxSpeed(builder);
  }

  public static void StartSC_MaxSpeed(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddSpeed(FlatBufferBuilder builder, ushort speed) { builder.AddUshort(0, speed, 0); }
  public static void AddTurningdisabled(FlatBufferBuilder builder, bool turningdisabled) { builder.AddBool(1, turningdisabled, false); }
  public static void AddWaterspeed(FlatBufferBuilder builder, byte waterspeed) { builder.AddByte(2, waterspeed, 0); }
  public static Offset<NetworkMessage.SC_MaxSpeed> EndSC_MaxSpeed(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<NetworkMessage.SC_MaxSpeed>(o);
  }
  public SC_MaxSpeed_FBS UnPack() {
    var _o = new SC_MaxSpeed_FBS();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SC_MaxSpeed_FBS _o) {
    _o.Speed = this.Speed;
    _o.Turningdisabled = this.Turningdisabled;
    _o.Waterspeed = this.Waterspeed;
  }
  public static Offset<NetworkMessage.SC_MaxSpeed> Pack(FlatBufferBuilder builder, SC_MaxSpeed_FBS _o) {
    if (_o == null) return default(Offset<NetworkMessage.SC_MaxSpeed>);
    return CreateSC_MaxSpeed(
      builder,
      _o.Speed,
      _o.Turningdisabled,
      _o.Waterspeed);
  }
}

public class SC_MaxSpeed_FBS
{
  public ushort Speed { get; set; }
  public bool Turningdisabled { get; set; }
  public byte Waterspeed { get; set; }

  public SC_MaxSpeed_FBS() {
    this.Speed = 0;
    this.Turningdisabled = false;
    this.Waterspeed = 0;
  }
}


static public class SC_MaxSpeedVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Speed*/, 2 /*ushort*/, 2, false)
      && verifier.VerifyField(tablePos, 6 /*Turningdisabled*/, 1 /*bool*/, 1, false)
      && verifier.VerifyField(tablePos, 8 /*Waterspeed*/, 1 /*byte*/, 1, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}
public struct SC_Quit : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static SC_Quit GetRootAsSC_Quit(ByteBuffer _bb) { return GetRootAsSC_Quit(_bb, new SC_Quit()); }
  public static SC_Quit GetRootAsSC_Quit(ByteBuffer _bb, SC_Quit obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SC_Quit __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public bool Totalout { get { int o = __p.__offset(4); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public byte Level { get { int o = __p.__offset(6); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }

  public static Offset<NetworkMessage.SC_Quit> CreateSC_Quit(FlatBufferBuilder builder,
      bool totalout = false,
      byte level = 0) {
    builder.StartTable(2);
    SC_Quit.AddLevel(builder, level);
    SC_Quit.AddTotalout(builder, totalout);
    return SC_Quit.EndSC_Quit(builder);
  }

  public static void StartSC_Quit(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddTotalout(FlatBufferBuilder builder, bool totalout) { builder.AddBool(0, totalout, false); }
  public static void AddLevel(FlatBufferBuilder builder, byte level) { builder.AddByte(1, level, 0); }
  public static Offset<NetworkMessage.SC_Quit> EndSC_Quit(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<NetworkMessage.SC_Quit>(o);
  }
  public SC_Quit_FBS UnPack() {
    var _o = new SC_Quit_FBS();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SC_Quit_FBS _o) {
    _o.Totalout = this.Totalout;
    _o.Level = this.Level;
  }
  public static Offset<NetworkMessage.SC_Quit> Pack(FlatBufferBuilder builder, SC_Quit_FBS _o) {
    if (_o == null) return default(Offset<NetworkMessage.SC_Quit>);
    return CreateSC_Quit(
      builder,
      _o.Totalout,
      _o.Level);
  }
}

public class SC_Quit_FBS
{
  public bool Totalout { get; set; }
  public byte Level { get; set; }

  public SC_Quit_FBS() {
    this.Totalout = false;
    this.Level = 0;
  }
}


static public class SC_QuitVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Totalout*/, 1 /*bool*/, 1, false)
      && verifier.VerifyField(tablePos, 6 /*Level*/, 1 /*byte*/, 1, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
